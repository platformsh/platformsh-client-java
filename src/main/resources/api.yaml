openapi: 3.0.1
info:
  title: Platform.sh Rest API
  version: '1.0'
  contact:
    name: Support
    url: https://platform.sh/contact
    email: support@platform.sh
  termsOfService: https://platform.sh/tos
  description: "# Introduction\n\nPlatform.sh is a container-based Platform-as-a-Service. Our main API\nis simply Git. With a single `git push` and a couple of YAML files in\nyour repository you can deploy an arbitrarily complex cluster.\nEvery [**Project**](#tag/Project) can have multiple applications (PHP,\nNode.js, Python, Ruby, Go, etc.) and managed, automatically\nprovisioned services (databases, message queues, etc.).\n\nEach project also comes with multiple concurrent\nlive staging/development [**Environments**](#tag/Environment).\nThese ephemeral development environments\nare automatically created every time you push a new branch or create a\npull request, and each has a full copy of the data of its parent branch,\nwhich is created on-the-fly in seconds.\n\nOur Git implementation supports integrations with third party Git\nproviders such as GitHub, Bitbucket, or GitLab, allowing you to simply\nintegrate Platform.sh into your existing workflow.\n\n## Using the REST API\n\nIn addition to the Git API, we also offer a REST API that allows you to manage\nevery aspect of the platform, from managing projects and environments,\nto accessing accounts and subscriptions, to creating robust workflows\nand integrations with your CI systems and internal services.\n\nThese API docs are generated from a standard **OpenAPI (Swagger)** Specification document\nwhich you can find here in [YAML](openapispec-platformsh.yaml) and in [JSON](openapispec-platformsh.json) formats.\n\nThis RESTful API consumes and produces HAL-style JSON over HTTPS,\nand any REST library can be used to access it. On GitHub, we also host\na few API libraries that you can use to make API access easier, such as our\n[PHP API client](https://github.com/platformsh/platformsh-client-php)\nand our [JavaScript API client](https://github.com/platformsh/platformsh-client-js).\n\nIn order to use the API you will first need to have a Platform.sh\naccount (we have a [free trial](https://accounts.platform.sh/platform/trial/general/setup)\navailable) and create an API Token.\n\n# Authentication\n\n## OAuth2\n\nAPI authentication is done with OAuth2 access tokens. After you get an API\ntoken, you can exchange it for an access token.\n\nTo create an API token, go to the \"API Tokens\" section\nof the \"Account Settings\" tab on the\n[User management page](https://accounts.platform.sh/user/api-tokens).\n\n### Getting an Access Token\n\nTo exchange this API token for an access token, a `POST` request\nmust be made to `https://accounts.platform.sh/oauth2/token`. The\nrequest has one required header: `Content-Type: application/json`\n\nThe API token is sent to the authorization endpoint in the body\nof the request:\n\n<pre>\n{\n\t\"client_id\": \"platform-api-user\",\n\t\"grant_type\": \"api_token\",\n\t\"api_token\": \"<em><b>API_TOKEN</b></em>\"\n}\n</pre>\n\nNote that the `client_id` and the `grant_type` fields are both required\nin addition to the `api_token`.\n\nIn practice, requesting an access token with cURL will look like this:\n\n<pre>\ncurl -X POST \\\n    -H 'Content-Type: application/json' \\\n    -d '{\n        \"client_id\": \"platform-api-user\",\n        \"grant_type\": \"api_token\",\n        \"api_token\": \"<em><b>API_TOKEN</b></em>\"\n    }' \\\n    https://accounts.platform.sh/oauth2/token\n</pre>\n\nThis will return a `Bearer` access token that\ncan be used to authenticate further API requests, for example:\n\n<pre>\n{\n    \"access_token\": \"<em><b>abcdefghij1234567890</b></em>\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"account\"\n}\n</pre>\n\n### Using the Access Token\n\nTo authenticate further API requests, include this returned bearer token\nin the `Authorization` header. For example, to retrieve a list of\n[Projects](#tag/Project)\naccessible by the current user, you can make the following request\n(substituting the dummy token for your own):\n\n<pre>\ncurl -X GET \\\n    -H \"Authorization: Bearer <em><b>abcdefghij1234567890</b></em>\" \\\n    -H \"Content-Type: application/json\" \\\n    https://api.platform.sh/projects\n</pre>\n\n# HAL Links\n\nMost endpoints in the API return fields which defines a HAL\n(Hypertext Application Language) schema for the requested endpoint.\nThe particular objects returns and their contents can vary by endpoint.\nThe payload examples we give here for the requests do not show these\nelements. These links can allow you to create a fully dynamic API client\nthat does not need to hardcode any method or schema.\n\nUnless they are used for pagination we do not show the HAL links in the\npayload examples in this documentation for brevity and as their content\nis contextual (based on the permissions of the user).\n\n## _links Objects\n\nMost endpoints that respond to `GET` requests will include a `_links` object\nin their response. The `_links` object contains a key-object pair labelled `self`, which defines\ntwo further key-value pairs:\n\n* `href` - A URL string referring to the fully qualified name of the returned object. For many endpoints, this will be the direct link to the API endpoint on the region gateway, rather than on the general API gateway. This means it may reference a host of, for example, `eu-2.platform.sh` rather than `api.platform.sh`.\n* `meta` - An object defining the OpenAPI Specification (OAS) [schema object](https://swagger.io/specification/#schemaObject) of the component returned by the endpoint.\n\nThere may be zero or more other fields in the `_links` object resembling fragment identifiers\nbeginning with a hash mark, e.g. `#edit` or `#delete`. Each of these keys\nrefers to a JSON object containing two key-value pairs:\n\n* `href` - A URL string referring to the path name of endpoint which can perform the action named in the key.\n* `meta` - An object defining the OAS schema of the endpoint. This consists of a key-value pair, with the key defining an HTTP method and the value defining the [operation object](https://swagger.io/specification/#operationObject) of the endpoint.\n\nTo use one of these HAL links, you must send a new request to the URL defined\nin the `href` field which contains a body defined the schema object in the `meta` field.\n\nFor example, if you make a request such as `GET /projects/abcdefghij1234567890`, the `_links`\nobject in the returned response will include the key `#delete`. That object\nwill look something like this fragment:\n\n```\n\"#delete\": {\n    \"href\": \"/api/projects/abcdefghij1234567890\",\n    \"meta\": {\n        \"delete\": {\n            \"responses\": {\n                . . . // Response definition omitted for space\n            },\n            \"parameters\": []\n        }\n    }\n}\n```\n\nTo use this information to delete a project, you would then send a `DELETE`\nrequest to the endpoint `https://api.platform.sh/api/projects/abcdefghij1234567890`\nwith no body or parameters to delete the project that was originally requested.\n\n## _embedded Objects\n\nRequests to endpoints which create or modify objects, such as `POST`, `PATCH`, or `DELETE`\nrequests, will include an `_embedded` key in their response. The object\nrepresented by this key will contain the created or modified object. This\nobject is identical to what would be returned by a subsequent `GET` request\nfor the object referred to by the endpoint.\n"
  x-logo:
    url: https://platform.sh/logos/redesign/Platformsh_logo_black.svg
    href: https://platform.sh/
    altText: Platform.sh logo
servers:
  - url: '{schemes}://api.platform.sh/'
    description: The Platform.sh API gateway
    variables:
      schemes:
        default: https
tags:
  - name: Cert Management
    description: "User-supplied SSL/TLS certificates can be managed using these\nendpoints. For more information, see our\n[Third-party TLS certificate](https://docs.platform.sh/golive/steps/tls.html#optional-configure-a-third-party-tls-certificate)\ndocumentation. These endpoints are not for managing certificates\nthat are automatically supplied by Platform.sh via Let's Encrypt.\n"
  - name: Environment
    description: "On Platform.sh, an environment encompasses a single instance of your\nentire application stack, the services used by the application,\nthe application's data storage, and the environment's backups.\n\nIn general, an environment represents a single branch or merge request\nin the Git repository backing a project. It is a virtual cluster\nof read-only application and service containers with read-write\nmounts for application and service data.\n\nOn Platform.sh, the `master` branch is your production environment—thus,\nmerging changes to master will put those changes to production.\n"
  - name: Environment Backups
    description: "A snapshot is a complete backup of an environment, including all the\npersistent data from all services running in an environment and all\nfiles present in mounted volumes.\n\nThese endpoints can be used to trigger the creation of new snapshots,\nget information about existing snapshots, delete existing snapshots or\nrestore a snapshot.\nMore information about snapshots can be found in our\n[Snapshot and Restore](https://docs.platform.sh/administration/snapshot-and-restore.html)\ndocumentation.\n"
  - name: Environment Access
    description: "These endpoints can be used to manipulate the access control list\nof a environment at the environment level—that is, users and roles\ndefined here will apply specifically to a single environment and its\nchildren within a project. For more project-level access control, see\nthe section entitled [Project Access](#tag/Project-Access).\n"
  - name: Environment Variables
    description: "These endpoints manipulate user-defined variables which are bound to a\nspecific environment, as well as (optionally) the children of an\nenvironment. These variables can be made available at both build time\nand runtime. For more information on environment variables,\nsee the [Variables](https://docs.platform.sh/development/variables.html#platformsh-environment-variables)\nsection of the documentation.\n"
  - name: Project
    description: "## Project Overview\n\nOn Platform.sh, a Project is backed by a single Git repository\nand encompasses your entire application stack, the services\nused by your application, the application's data storage,\nthe production and staging environments, and the backups of those\nenvironments.\n\nWhen you create a new project, you start with a single\n[Environment](#tag/Environment) called *Master*,\ncorresponding to the master branch in the Git repository of\nthe project—this will be your production environment.\n\nIf you connect your project to an external Git repo\nusing one of our [Third-Party Integrations](#tag/Third-Party-Integrations)\na new development environment can be created for each branch\nor pull request created in the repository. When a new development\nenvironment is created, the production environment's data\nwill be cloned on-the-fly, giving you an isolated, production-ready\ntest environment.\n\nThis set of API endpoints can be used to retrieve a list of projects\nassociated with an API key, as well as create and update the parameters\nof existing projects.\n\n> **Note**:\n>\n> To list projects or to create new project, use [`/subscriptions`](#tag/Subscriptions).\n"
  - name: Project Access
    description: "These endpoints can be used to manipulate the access control list\nat the project level. Users and roles defined here will apply globally\nto all environments within a project. For more fine-grained,\nenvironment-level access control, see the section\nentitled [Environment Access](#tag/Environment-Access).\n"
  - name: Project Variables
    description: "These endpoints manipulate user-defined variables which are bound to an\nentire project. These variables are accessible to all environments\nwithin a single project, and they can be made available at both build\ntime and runtime. For more information on project variables,\nsee the [Variables](https://docs.platform.sh/development/variables.html#project-variables)\nsection of the documentation.\n"
  - name: Project Settings
    description: "These endpoints can be used to retrieve and manipulate project-level\nsettings. Only the `initialize` property can be set by end users. It is used\nto initialize a project from an existing Git repository.\n\nThe other properties can only be set by a privileged user.\n"
  - name: Repository
    description: "The Git repository backing projects hosted on Platform.sh can be\naccessed in a **read-only** manner through the `/projects/{projectId}/git/*`\nfamily of endpoints. With these endpoints, you can retrieve objects from\nthe Git repository in the same way that you would in a local environment.\n"
  - name: Domain Management
    description: "These endpoints can be used to add, modify, or remove domains from\na project. For more information on how domains function on\nPlatform.sh, see the [Domains](https://docs.platform.sh/administration/web/configure-project.html#domains)\nsection of our documentation.\n"
  - name: Routing
    description: "These endpoints modify an environment's `.platform/routes.yaml` file.\nFor routes to propagate to child environments, the child environments\nmust be synchronized with their parent.\n\n> **Warning**: These endpoints create a new commit in the project repository.\n> This may lead to merge conflicts if you are using an external Git provider\n> through our integrations.\n>\n> **We strongly recommend that you specify your routes in your `.platform/routes.yaml`\n> file if you use an external Git integration such as GitHub or GitLab.**\n\nMore information about routing can be found in the [Routes](https://docs.platform.sh/configuration/routes.html)\nsection of the documentation.\n"
  - name: Source Operations
    description: "> *WARNING: These endpoints are currently in alpha release and may not yet\n> be available on all projects or on all regions.*\n\nThese endpoints interact with source code operations as defined in the `source.operations`\nkey in a project's `.platform.app.yaml` configuration. More information\non source code operations is\n[available in our user documentation](https://docs.platform.sh/configuration/app/source-operations.html).\n"
  - name: Deployment Target
    description: "Platform.sh is capable of deploying the production environments of\nprojects in multiple topologies: both in clusters of containers, and\nas dedicated virtual machines. This is an internal API that can\nonly be used by privileged users.\n"
  - name: Deployments
    description: "The deployments endpoints gives detailed information about the actual\ndeployment of an active environment. Currently, it returns the _current_\ndeployment with information about the different apps, services, and\nroutes contained within.\n"
  - name: Third-Party Integrations
    description: "Platform.sh can easily integrate with many third-party services, including\nGit hosting services (GitHub, GitLab, and Bitbucket),\nhealth notification services (email, Slack, PagerDuty),\nperformance analytics platforms (New Relic, Blackfire, Tideways),\nand webhooks.\n\nFor clarification about what information each field requires, see the\n[External Integrations](https://docs.platform.sh/administration/integrations.html)\ndocumentation. NOTE: The names of the CLI arguments listed in the\ndocumentation are not always named exactly the same as the\nrequired body fields in the API request.\n"
  - name: Subscriptions
    description: "Each project is represented by a subscription that holds the plan information.\nThese endpoints can be used to go to a larger plan, add more storage, or subscribe to\noptional features.\n"
  - name: Orders
    description: "These endpoints can be used to retrieve order information from our billing\nsystem. Here you can view information about your bill for our services,\ninclude the billed amount and a link to a PDF of the bill.\n"
  - name: Vouchers
    description: "These endpoints can be used to retrieve vouchers associated with a particular\nuser as well as apply a voucher to a particular user.\n"
  - name: Records
    description: "These endpoints retrieve information about which plans were assigned to a particular\nproject at which time.\n"
  - name: Support
    description: "These endpoints can be used to retrieve information about support ticket priority\nand allow you to submit new ticket to the Platform.sh Support Team.\n"
  - name: System Information
    description: "These endpoints can be used to retrieve low-level information and interact with the\ncore component of Platform.sh infrastructure.\n\nThis is an internal API that can only be used by privileged users.\n"
x-tagGroups:
  - name: Project Administration
    tags:
      - Project
      - Domain Management
      - Cert Management
      - Project Variables
      - Repository
      - Third-Party Integrations
      - Support
  - name: Environments
    tags:
      - Environment
      - Environment Backups
      - Environment Variables
      - Routing
      - Source Operations
      - Deployment
  - name: User Activity
    tags:
      - Project Activity
      - Environment Activity
  - name: Access Control
    tags:
      - Project Access
      - Environment Access
  - name: Account Management
    tags:
      - Users
      - User Profiles
      - SSH Keys
      - Subscriptions
      - Plans
  - name: Billing
    tags:
      - Orders
      - Vouchers
      - Records
  - name: Global Info
    tags:
      - Project Discovery
      - Regions
  - name: Internal APIs
    tags:
      - Project Settings
      - Deployment Target
      - System Information
paths:
  /orders:
    get:
      tags:
        - Orders
      summary: Get list of orders
      operationId: RestfulDataPlatformOrders::index
      parameters:
        - $ref: '#/components/parameters/filter_order_owner'
        - $ref: '#/components/parameters/filter_order_status'
        - $ref: '#/components/parameters/filter_order_total'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/all'
      responses:
        '200':
          description: The list of orders.
          content:
            application/json:
              schema:
                properties:
                  orders:
                    description: Array of order information.
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  count:
                    description: Total number of results.
                    type: integer
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get an order
      parameters:
        - $ref: '#/components/parameters/order_id'
      responses:
        '200':
          description: An Order object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /records/plan:
    get:
      tags:
        - Records
      summary: Retrieve project plan records
      operationId: RestfulDataPlatformRecordPlans::index
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/filter_subscription_id'
        - $ref: '#/components/parameters/filter_subscription_owner'
        - $ref: '#/components/parameters/filter_subscription_plan'
        - $ref: '#/components/parameters/record_status'
        - $ref: '#/components/parameters/record_start'
        - $ref: '#/components/parameters/record_end'
      responses:
        '200':
          description: The list of projects.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  plan:
                    description: Array of project plan records.
                    type: array
                    items:
                      $ref: '#/components/schemas/PlanRecords'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
  /records/usage:
    get:
      tags:
        - Records
      summary: Retrieve project usage records
      operationId: RestfulDataPlatformRecordUsage::index
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/filter_subscription_id'
        - $ref: '#/components/parameters/filter_subscription_owner'
        - $ref: '#/components/parameters/filter_subscription_vendor'
        - $ref: '#/components/parameters/record_usage_group'
        - $ref: '#/components/parameters/record_start'
        - $ref: '#/components/parameters/record_end'
      responses:
        '200':
          description: The list of projects.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  usage:
                    description: Array of project usage records.
                    type: array
                    items:
                      $ref: '#/components/schemas/Usage'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
  /me:
    get:
      tags:
        - Users
      summary: Get current logged-in user info
      operationId: _blimp_platform_me_resource
      responses:
        '200':
          description: The user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      description: "Return the information about the currently logged-in user (the\nuser associated with the access token).\n"
  /users/{uuid}/ssh_keys:
    get:
      tags:
        - Users
      summary: Get list of a user's SSH keys
      operationId: _blimp_platform_user_resource_sshkeys
      parameters:
        - name: uuid
          in: path
          description: The UUID of the owner.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A List of SSH public key records.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    fingerprint:
                      description: The fingerprint of the public key.
                      type: string
                    value:
                      description: The actual value of the public key.
                      type: string
                  type: object
      description: "Retrieve all SSH keys associated with a single user, as specified\nby the user's UUID.\n"
  /users/{uuid}:
    get:
      tags:
        - Users
      summary: Get a single user
      operationId: _blimp_platform_users_resource_retrieve
      parameters:
        - name: uuid
          in: path
          description: The UUID of the owner.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      description: "Retrieve an object representing a single user, as specified by UUID.\n"
  /users:
    get:
      tags:
        - Users
      summary: Search for users
      operationId: _blimp_platform_users_resource
      parameters:
        - name: s
          in: query
          description: The query string containing the name fragment or full email.
          schema:
            type: string
        - name: start_at
          in: query
          description: The sequence number used to filter users.
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of users to return.
          schema:
            type: integer
            default:
        - name: offset
          in: query
          description: If limit is set to non-zero value, you can pass also non-zero value for offset. For example to get users from 5 to 15, pass limit=10 and offset=5.
          schema:
            type: integer
            default:
      responses:
        '200':
          description: An array of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      description: Search for a user by name or email address.
  /users/register:
    post:
      tags:
        - Users
      summary: Register a new user
      operationId: _blimp_platform_users_create_resource
      requestBody:
        content:
          application/json:
            schema:
              required:
                - mail
              properties:
                mail:
                  description: The email of the user to be created
                  type: string
                  format: email
                username:
                  description: The username to be created. Defaults to sanitized email.
                  type: string
                display_name:
                  description: The display name of the user. Usually first and last name. Defaults to sanitized email.
                  type: string
              type: object
      responses:
        '200':
          description: An existing user object, if the provided email already exists in the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '201':
          description: A newly created user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - OAuth2:
            - administration
      description: Register a new user on Platform.sh.
  /ssh_keys/{key_id}:
    get:
      tags:
        - SSH Keys
      summary: Get a single SSH key record
      operationId: _blimp_platform_sshkey_resource_retrieve
      parameters:
        - name: key_id
          in: path
          description: The ID of the ssh key.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single SSH public key record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
    delete:
      tags:
        - SSH Keys
      summary: Delete a single SSH key
      operationId: _blimp_platform_sshkey_resource_delete
      parameters:
        - name: key_id
          in: path
          description: The ID of the ssh key.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Success.
  /ssh_keys:
    post:
      tags:
        - SSH Keys
      summary: Add a new public SSH key to a user
      operationId: _blimp_platform_sshkey_resource_create
      requestBody:
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  description: The value of the ssh key.
                  type: string
                title:
                  description: The title of the ssh key.
                  type: string
                uuid:
                  description: The uuid of the user.
                  type: string
              type: object
      responses:
        '201':
          description: The newly created ssh key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
  /plans:
    get:
      tags:
        - Plans
      summary: Get available plans
      responses:
        '200':
          description: The list of plans.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of plans.
                    type: integer
                  plans:
                    description: Array of plans.
                    type: array
                    items:
                      $ref: '#/components/schemas/Plan'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
      description: Retrieve information about plans and pricing on Platform.sh.
  /regions:
    get:
      tags:
        - Regions
      summary: Get list of available regions
      operationId: RestfulEntityBlimpPlatformRegion::index
      parameters:
        - $ref: '#/components/parameters/region_zone'
        - $ref: '#/components/parameters/region_provider'
        - $ref: '#/components/parameters/region_available'
        - $ref: '#/components/parameters/region_private'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: The list of regions.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  regions:
                    description: Array of regions.
                    type: array
                    items:
                      $ref: '#/components/schemas/Region'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
  /regions/{regionId}:
    get:
      tags:
        - Regions
      summary: Get information about a single region
      operationId: RestfulEntityBlimpPlatformRegion::view
      parameters:
        - name: regionId
          in: path
          description: The ID of the region
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A Region object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
  /locate:
    get:
      tags:
        - Project Discovery
      summary: Locate user projects
      operationId: RestfulEntityPlatformProject::index
      parameters:
        - $ref: '#/components/parameters/filter_subscription_owner'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/all'
      responses:
        '200':
          description: The list of projects.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  projects:
                    description: Array of standard project information.
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectLink'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
      description: "This endpoint returns a paginated list of all the projects associated\nwith a given UUID. The returned information includes each project's\nrespective endpoint and management\nconsole URLs, as well as information about the project owner.\n"
  /locate/{projectId}:
    get:
      tags:
        - Project Discovery
      summary: Get information about a single project
      operationId: RestfulEntityPlatformProject::view
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: A Project object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLink'
      description: "This endpoint returns a project's endpoint and management\nconsole URLs, as well as information about the project owner.\n"
  /subscriptions:
    get:
      tags:
        - Subscriptions
      summary: Search for subscriptions
      operationId: RestfulEntityPlatformSubscription::index
      parameters:
        - $ref: '#/components/parameters/filter_subscription_owner'
        - $ref: '#/components/parameters/subscription_status'
        - $ref: '#/components/parameters/filter_subscription_support_tier'
        - $ref: '#/components/parameters/filter_subscription_vendor'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/all'
      responses:
        '200':
          description: The list of subscriptions.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  subscriptions:
                    description: Array of standard subscription information.
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscription'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
    post:
      tags:
        - Subscriptions
      summary: Start a new subscription
      operationId: RestfulEntityPlatformSubscription::create
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                project_region:
                  description: The machine name of the region where the Platform.sh project is located. Cannot be changed after project creation.
                  type: string
                project_title:
                  description: The name given to the Platform.sh project. Appears as the title in the Platform.sh UI.
                  type: string
                owner:
                  description: The UUID of the owner. Defaults to current user.
                  type: string
                plan:
                  description: The Platform.sh plan type of the subscription.
                  type: string
                  default:
                  enum:
                    - development
                    - standard
                    - medium
                    - large
                    - xlarge
                    - 2xlarge
                vendor:
                  description: The machine name of the vendor the subscription belongs to.
                  type: string
                support_tier:
                  description: The support tier for this subscription.
                  type: string
                project_notes:
                  description: The CSE notes for this project.
                  type: string
              type: object
      responses:
        '200':
          description: A Subscription object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /subscriptions/{subscriptionId}:
    get:
      tags:
        - Subscriptions
      summary: Get information about a single subscription
      operationId: RestfulEntityPlatformSubscription::viewEntity
      parameters:
        - $ref: '#/components/parameters/subscription_id'
      responses:
        '200':
          description: A Subscription object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    delete:
      tags:
        - Subscriptions
      summary: Delete a subscription
      operationId: RestfulEntityPlatformSubscription::delete
      parameters:
        - $ref: '#/components/parameters/subscription_id'
      responses:
        '204':
          description: Success.
    patch:
      tags:
        - Subscriptions
      summary: Update a subscription
      description: Update a subscription, supplying one or more key/value pairs to to change.
      operationId: RestfulEntityPlatformSubscription::update
      parameters:
        - $ref: '#/components/parameters/subscription_id'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - plan
              properties:
                plan:
                  description: The Platform.sh plan type of the subscription.
                  type: string
                environments:
                  description: The maximum number of environments which can be provisioned on the Platform.sh project.
                  type: integer
                storage:
                  description: The total storage available to each Platform.sh environment, in MiB.
                  type: integer
                support_tier:
                  description: The support tier for this subscription..
                  type: string
                project_notes:
                  description: The CSE notes for this project.
                  type: string
              type: object
      responses:
        '201':
          description: A Subscription object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /subscriptions/{subscriptionId}/suspend:
    post:
      tags:
        - subscriptions
      summary: Suspend a Platform.sh subscription
      operationId: RestfulEntityPlatformSubscription::suspendLicense
      parameters:
        - $ref: '#/components/parameters/subscription_id'
      responses:
        '200':
          description: A Subscription object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /subscriptions/{subscriptionId}/reactivate:
    post:
      tags:
        - subscriptions
      summary: Reactivate a Platform.sh subscription
      operationId: RestfulEntityPlatformSubscription::reactivateLicense
      parameters:
        - $ref: '#/components/parameters/subscription_id'
      responses:
        '200':
          description: A Subscription object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /subscriptions/{subscriptionId}/estimate:
    post:
      tags:
        - Subscriptions
      summary: Estimate existing subscription price
      operationId: RestfulEntityPlatformSubscription::estimateExisting
      parameters:
        - $ref: '#/components/parameters/subscription_id'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - plan
              properties:
                plan:
                  description: The Platform.sh plan type of the subscription.
                  type: string
                environments:
                  description: The maximum number of environments which can be provisioned on the Platform.sh project.
                  type: integer
                storage:
                  description: The total storage available to each Platform.sh environment, in MiB.
                  type: integer
                user_licenses:
                  description: The number of user licenses.
                  type: integer
              type: object
      responses:
        '200':
          description: A price estimate object
          content:
            application/json:
              schema:
                properties:
                  plan:
                    description: The monthly price of the plan.
                    type: string
                  user_licenses:
                    description: The monthly price of the user licenses.
                    type: string
                  environments:
                    description: The monthly price of the environments.
                    type: string
                  storage:
                    description: The monthly price of the storage.
                    type: string
                  total:
                    description: The total monthly price.
                    type: string
                  options:
                    description: The unit prices of the options.
                    type: object
                type: object
  /subscriptions/estimate:
    post:
      tags:
        - Subscriptions
      summary: Estimate new subscription price
      operationId: RestfulEntityPlatformSubscription::estimate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - plan, environments, storage, user_licenses
              properties:
                plan:
                  description: The Platform.sh plan type of the subscription.
                  type: string
                environments:
                  description: The maximum number of environments which can be provisioned on the Platform.sh project.
                  type: integer
                storage:
                  description: The total storage available to each Platform.sh environment, in MiB.
                  type: integer
                user_licenses:
                  description: The number of user licenses.
                  type: integer
              type: object
      responses:
        '200':
          description: A price estimate object
          content:
            application/json:
              schema:
                properties:
                  plan:
                    description: The monthly price of the plan.
                    type: string
                  user_licenses:
                    description: The monthly price of the user licenses.
                    type: string
                  environments:
                    description: The monthly price of the environments.
                    type: string
                  storage:
                    description: The monthly price of the storage.
                    type: string
                  total:
                    description: The total monthly price.
                    type: string
                  options:
                    description: The unit prices of the options.
                    type: object
                type: object
  /payment_source:
    get:
      tags:
        - payment
      summary: Platform.sh Payment Source
      operationId: RestfulEntityStripeSource::viewSource
      parameters:
        - $ref: '#/components/parameters/filter_payment_owner'
      responses:
        '200':
          description: The payment source.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  payment_source:
                    $ref: '#/components/schemas/PaymentSource'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
    post:
      tags:
        - payment
      summary: Create a Platform.sh Payment Source
      operationId: RestfulEntityStripeSource::createSource
      requestBody:
        content:
          application/json:
            schema:
              required:
                - source_type
                - token
              properties:
                source_type:
                  description: The Platform.sh Payment Source type.
                  type: string
                  enum:
                    - credit-card
                    - stripe_sepa_debit
                token:
                  description: The source ID or token received from Stripe API.
                  type: string
                email:
                  description: The email which will be associated to the Stripe customer. Defaults to user's email.
                  type: string
              type: object
      responses:
        '200':
          description: A Payment Source object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSource'
    delete:
      tags:
        - payment
      summary: Delete a Platform.sh Payment Source
      operationId: RestfulEntityStripeSource::deleteSource
      parameters:
        - name: owner
          in: query
          description: The UUID of the owner of the payment source.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Success.
  /payment_source/allowed:
    get:
      tags:
        - payment
      summary: Allowed Platform.sh Payment Source Types.
      operationId: RestfulEntityStripeSource::viewAllowedTypes
      responses:
        '200':
          description: The list of allowed payment sources for the current API consumer.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  payment_sources:
                    properties:
                      id:
                        description: The ID of the payment source type.
                        type: string
                      label:
                        description: The label of the payment source type.
                        type: string
                    type: object
                type: object
  /payment_source/intent:
    post:
      tags:
        - payment
      summary: Create a Platform.sh Setup Intent
      operationId: RestfulEntityStripeSource::createIntent
      responses:
        '200':
          description: Payment intent details
          content:
            application/json:
              schema:
                properties:
                  client_secret:
                    description: Payment intent client secret token..
                    type: string
                  public_key:
                    description: Stripe API public key.
                    type: string
                type: object
  /profiles:
    get:
      tags:
        - User Profiles
      summary: Get user profiles
      operationId: Drupal\blimp_user\Plugin\ApiResource\RestfulUserProfiles::controllersInfo
      responses:
        '200':
          description: The list of user profiles.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  profiles:
                    description: Array of user profiles.
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
  /profiles/{userId}:
    get:
      tags:
        - User Profiles
      summary: Get a single user profile
      operationId: Drupal\blimp_user\Plugin\ApiResource\RestfulUserProfiles::viewEntity
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: A User profile object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    patch:
      tags:
        - User Profiles
      summary: Update a user profile
      description: Update a user profile, supplying one or more key/value pairs to to change.
      operationId: Drupal\blimp_user\Plugin\ApiResource\RestfulUserProfiles::patchEntity
      parameters:
        - $ref: '#/components/parameters/user_id'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                display_name:
                  description: The user's display name.
                  type: string
                username:
                  description: The user's username.
                  type: string
                current_password:
                  description: The user's current password.
                  type: string
                password:
                  description: The user's new password.
                  type: string
                company_type:
                  description: The company type.
                  type: string
                company_name:
                  description: The name of the company.
                  type: string
                vat_number:
                  description: The vat number of the user.
                  type: string
                company_role:
                  description: The role of the user in the company.
                  type: string
                marketing:
                  description: Flag if the user agreed to receive marketing communication.
                  type: boolean
                ui_colorscheme:
                  description: The user's chosen color scheme for user interfaces. Available values are 'light' and 'dark'.
                  type: string
                default_catalog:
                  description: The URL of a catalog file which overrides the default.
                  type: string
                project_options_url:
                  description: The URL of an account-wide project options file.
                  type: string
                picture:
                  description: Url of the user's picture.
                  type: string
              type: object
      responses:
        '201':
          description: A User profile object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /profiles/{userId}/address:
    get:
      tags:
        - User Profiles
      summary: Get a user address
      operationId: Drupal\blimp_user\Plugin\ApiResource\RestfulUserProfiles::viewAddress
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: A User profile object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
    patch:
      tags:
        - User Profiles
      summary: Update a user address
      description: Update a user address, supplying one or more key/value pairs to to change.
      operationId: Drupal\blimp_user\Plugin\ApiResource\RestfulUserProfiles::patchAddress
      parameters:
        - $ref: '#/components/parameters/user_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '201':
          description: A user address object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
  /profile/{uuid}/picture:
    post:
      tags:
        - User Profiles
      summary: Create a users profile picture
      operationId: Drupal\blimp_user\Plugin\ApiResource\RestfulUserProfilesPictureUpload::createPic
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: The new picture url.
          content:
            application/json:
              schema:
                properties:
                  url:
                    description: The relative url of the picture.
                    type: string
                type: object
    delete:
      tags:
        - User Profiles
      summary: Delete a users profile picture
      operationId: Drupal\blimp_user\Plugin\ApiResource\RestfulUserProfilesPictureUpload::deletePic
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '204':
          description: No Content success.
  /vouchers:
    get:
      tags:
        - Vouchers
      summary: Get list of vouchers associated with a user
      operationId: _blimp_vouchers_index
      parameters:
        - name: uuid
          in: query
          description: The UUID of the user. Defaults to current user.
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A List of vouchers, including totals, totals applied and remaining balance, as well as all discounted orders.
          content:
            application/json:
              schema:
                properties:
                  uuid:
                    description: The uuid of the user.
                    type: string
                    format: uuid
                  vouchers_total:
                    description: The total voucher credit given to the user.
                    type: number
                    format: float
                  vouchers_applied:
                    description: The part of total voucher credit applied to orders.
                    type: number
                    format: float
                  vouchers_remaining_balance:
                    description: The remaining voucher credit, available for future orders.
                    type: number
                    format: float
                  currency:
                    description: The currency of the vouchers.
                    type: string
                  vouchers:
                    description: Array of vouchers.
                    type: array
                    items:
                      properties:
                        code:
                          description: The voucher code.
                          type: string
                        amount:
                          description: The total voucher credit.
                          type: number
                          format: float
                        currency:
                          description: The currency of the voucher.
                          type: string
                      type: object
                  discounted_orders:
                    description: Array of orders to which a voucher applied.
                    type: array
                    items:
                      properties:
                        order_id:
                          description: The id of the order.
                          type: integer
                        status:
                          description: The status of the order.
                          type: string
                        billing_period_start:
                          description: The billing period start timestamp of the order (ISO 8601).
                          type: string
                        billing_period_end:
                          description: The billing period end timestamp of the order (ISO 8601).
                          type: string
                        order_total:
                          description: The total of the order.
                          type: number
                          format: float
                        order_discount:
                          description: The total voucher credit applied to the order.
                          type: number
                          format: float
                        currency:
                          description: The currency of the order.
                          type: string
                      type: object
                type: object
  /vouchers/apply:
    post:
      tags:
        - Vouchers
      summary: Apply a voucher to a user
      operationId: _blimp_vouchers_apply_voucher
      requestBody:
        content:
          application/x-www-form-urlencoded: {}
      responses:
        '201':
          description: Success.
      description: Apply a voucher to a user and refresh the currently open order.
  /tickets:
    get:
      tags:
        - Support
        - support
      summary: Platform.sh support tickets
      operationId: RestfulDataTickets::index
      parameters:
        - $ref: '#/components/parameters/filter_ticket_id'
        - $ref: '#/components/parameters/filter_url'
        - $ref: '#/components/parameters/filter_created'
        - $ref: '#/components/parameters/filter_updated'
        - $ref: '#/components/parameters/filter_ticket_type'
        - $ref: '#/components/parameters/filter_ticket_subject'
        - $ref: '#/components/parameters/filter_description'
        - $ref: '#/components/parameters/filter_ticket_priority'
        - $ref: '#/components/parameters/filter_ticket_status'
        - $ref: '#/components/parameters/filter_recipient'
        - $ref: '#/components/parameters/filter_ticket_requester_id'
        - $ref: '#/components/parameters/filter_submitter_id'
        - $ref: '#/components/parameters/filter_assignee_id'
        - $ref: '#/components/parameters/filter_has_incidents'
        - $ref: '#/components/parameters/filter_due'
        - $ref: '#/components/parameters/filter_support_plan'
        - $ref: '#/components/parameters/filter_affected_url'
        - $ref: '#/components/parameters/filter_queue'
        - $ref: '#/components/parameters/filter_issue_type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/all'
      responses:
        '200':
          description: The list of tickets.
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: Total number of results.
                    type: integer
                  tickets:
                    description: Array of support tickets.
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
                  _links:
                    $ref: '#/components/schemas/HalLinks'
                type: object
    post:
      tags:
        - Support
        - support
      summary: Create a new Platform.sh support ticket
      operationId: RestfulDataTickets::create
      requestBody:
        content:
          application/json:
            schema:
              properties:
                subject:
                  description: A title of the ticket.
                  type: string
                description:
                  description: The description body of the support ticket.
                  type: string
                requester_id:
                  description: UUID of the ticket requester. Converted from the ZID value.
                  type: string
                  format: uuid
                priority:
                  description: A priority of the ticket.
                  type: string
                  enum:
                    - low
                    - normal
                    - high
                    - urgent
                subscription_id:
                  description: see create()
                  type: string
                attachment:
                  description: see create()
                  type: string
                attachment_filename:
                  description: see create()
                  type: string
              type: object
      responses:
        '200':
          description: A Support Ticket object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
  /tickets/priority:
    get:
      tags:
        - Support
        - support
      summary: Return a list of available priorities for a license
      operationId: RestfulDataTickets::priorityList
      parameters:
        - name: subscription_id
          in: query
          description: The ID of the subscription the ticket should be related to
          required: false
          schema:
            type: string
      responses:
        '200':
          description: An array of available priorities for that license.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      description: Machine name of the priority.
                      type: string
                    label:
                      description: The human-readable label of the priority.
                      type: string
                    short_description:
                      description: The short description of the priority.
                      type: string
                    description:
                      description: The long description of the priority.
                      type: string
                  type: object
  /projects/{projectId}/variables/{projectVariableId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: projectVariableId
          schema:
            type: string
      tags:
        - Project Variables
      summary: Delete a project variable
      description: Delete a single user-defined project variable.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectVariablePatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: projectVariableId
          schema:
            type: string
      tags:
        - Project Variables
      summary: Update a project variable
      description: "Update a single user-defined project variable.\nThe `value` can be either a string or a JSON\nobject (default: string), as specified by the `is_json` boolean flag.\nSee the [Variables](https://docs.platform.sh/development/variables.html#project-variables)\nsection in our documentation for more information.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectVariable'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: projectVariableId
          schema:
            type: string
      tags:
        - Project Variables
      summary: Get a project variable
      description: Retrieve a single user-defined project variable.
  /users/{userId}/keys/{userKeyDocumentId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: userId
          schema:
            type: string
        - required: true
          in: path
          name: userKeyDocumentId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserKeyPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: userId
          schema:
            type: string
        - required: true
          in: path
          name: userKeyDocumentId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKey'
          description: ''
      parameters:
        - required: true
          in: path
          name: userId
          schema:
            type: string
        - required: true
          in: path
          name: userKeyDocumentId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /me/keys/{userKeyDocumentId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: userKeyDocumentId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserKeyPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: userKeyDocumentId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKey'
          description: ''
      parameters:
        - required: true
          in: path
          name: userKeyDocumentId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /users/{userId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: userId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: userId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      parameters:
        - required: true
          in: path
          name: userId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /projects/{projectId}/environments/{environmentId}/deployments:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Internal
      summary: Create a new deployment
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Deployment
      summary: Get an environment's deployment information
      description: "Retrieve the read-only configuration of an environment's deployment.\nThe returned information is everything required to\nrecreate a project's current deployment.\n\nMore specifically, the objects\nreturned by this endpoint contain the configuration derived from the\nrepository's YAML configuration files: `.platform.app.yaml`,\n`.platform/services.yaml`, and `.platform/routes.yaml`.\n\nAdditionally, any values deriving from environment variables, the\ndomains attached to a project, project access settings, etc. are\nincluded here.\n\nThis endpoint currently returns a list containing a single deployment\nconfiguration with an `id` of `current`. This may be subject to change\nin the future.\n"
  /projects/{projectId}/system:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemInformationPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInformation'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - System Information
      summary: Get information about the Git server.
      description: Output information for the project.
  /projects/{projectId}/activities:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project Activity
      summary: Get project activity log
      description: "Retrieve a project's activity log including logging actions in all\nenvironments within a project. This returns a list of objects\nwith records of actions such as:\n\n- Commits being pushed to the repository\n- A new environment being branched out from the specified environment\n- A snapshot being created of the specified environment\n\nThe object includes a timestamp of when the action occurred\n(`created_at`), when the action concluded (`updated_at`),\nthe current `state` of the action, the action's completion\npercentage (`completion_percent`), the `environments` it\napplies to and other related information in\nthe `payload`.\n\nThe contents of the `payload` varies based on the `type` of the\nactivity. For example:\n\n- An `environment.branch` action's `payload` can contain objects\nrepresenting the environment's `parent` environment and the\nbranching action's `outcome`.\n\n- An `environment.push` action's `payload` can contain objects\nrepresenting the `environment`, the specific `commits` included in\nthe push, and the `user` who pushed.\n"
  /projects/{projectId}/access:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccessCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project Access
      summary: Add a user to a project ACL
      description: Add a user to a project's access control list
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAccess'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project Access
      summary: Get a project's access control list
      description: "Retrieve a list of objects specifying the users with access to a project\nand those users' roles.\n"
  /projects/{projectId}/environments/{environmentId}/deployments/{deploymentId}/topology:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTopology'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: deploymentId
          schema:
            type: string
      tags:
        - EnvironmentTopology
  /projects/{projectId}/git:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mapping'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /projects/{projectId}/environments/{environmentId}/activate:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Activate an environment
      description: Set the specified environment's status to active
  /projects/{projectId}/access/{projectAccessId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: projectAccessId
          schema:
            type: string
      tags:
        - Project Access
      summary: Remove a user from a project
      description: "Remove a user from a project's access control list\nusing the `id` of the entry in the access control list\nretrieved with the [Get project access control list](#tag/Project-Access%2Fpaths%2F~1projects~1%7BprojectId%7D~1access%2Fget)\nendpoint.\n"
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccessPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: projectAccessId
          schema:
            type: string
      tags:
        - Project Access
      summary: Update a project user's role
      description: "Change the role of a user from a project's access control list\nusing the `id` of the entry in the access control list\nretrieved with the [Get project access control list](#tag/Project-Access%2Fpaths%2F~1projects~1%7BprojectId%7D~1access%2Fget)\nendpoint.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAccess'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: projectAccessId
          schema:
            type: string
      tags:
        - Project Access
      summary: Get a single project ACL entry
      description: "Retrieve the details of a user from a project's access control list\nusing the `id` of the entry in the access control list\nretrieved with the [Get project access control list](#tag/Project-Access%2Fpaths%2F~1projects~1%7BprojectId%7D~1access%2Fget)\nendpoint.\n"
  /projects/{projectId}/git/blobs/{repositoryBlobId}:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blob'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: repositoryBlobId
          schema:
            type: string
      tags:
        - Repository
      summary: Get a blob object
      description: "Retrieve, by hash, an object representing a blob in the repository\nbacking a project. This endpoint allows direct read-only access\nto the contents of files in a repo. It returns the file in the\n`content` field of the response object, encoded according to the\nformat in the `encoding` field, e.g. `base64`.\n"
  /projects/{projectId}/system/restart:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - System Information
      summary: Restart the Git server
      description: Force the Git server to restart.
  /projects/{projectId}/environments/{environmentId}/backup:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment Backups
      summary: Create snapshot of environment
      description: "Trigger a new snapshot of an environment to be created. See the\n[Snapshot and Restore](https://docs.platform.sh/administration/snapshot-and-restore.html)\nsection of the documentation for more information.\n"
  /projects/{projectId}/git/tags:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /projects/{projectId}/git/commits/{repositoryCommitId}:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: repositoryCommitId
          schema:
            type: string
      tags:
        - Repository
      summary: Get a commit object
      description: "Retrieve, by hash, an object representing a commit in the repository backing\na project. This endpoint functions similarly to `git cat-file -p <commit-id>`.\nThe returned object contains the hash of the Git tree that it\nbelongs to, as well as the ID of parent commits.\n\nThe commit represented by a parent ID can be retrieved using this\nendpoint, while the tree state represented by this commit can\nbe retrieved using the\n[Get a tree object](#tag/Git-Repo%2Fpaths%2F~1projects~1%7BprojectId%7D~1git~1trees~1%7BrepositoryTreeId%7D%2Fget)\nendpoint.\n"
  /projects/{projectId}/environments/{environmentId}/variables/{variableId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: variableId
          schema:
            type: string
      tags:
        - Environment Variables
      summary: Delete an environment variable
      description: Delete a single user-defined environment variable.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariablePatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: variableId
          schema:
            type: string
      tags:
        - Environment Variables
      summary: Update an environment variable
      description: "Update a single user-defined environment variable.\nThe `value` can be either a string or a JSON\nobject (default: string), as specified by the `is_json` boolean flag.\nAdditionally, the inheritability of an environment variable can be\ndetermined through the `is_inheritable` flag (default: true).\nSee the [Variables](https://docs.platform.sh/development/variables.html#platformsh-environment-variables)\nsection in our documentation for more information.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: variableId
          schema:
            type: string
      tags:
        - Environment Variables
      summary: Get an environment variable
      description: Retrieve a single user-defined environment variable.
  /projects/{projectId}/environments/{environmentId}/backups/{backupId}/restore:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentRestoreInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: backupId
          schema:
            type: string
      tags:
        - Environment Backups
      summary: Restore an environment snapshot
      description: "Restore a specific backup from an environment using the `id`\nof the entry retrieved by the\n[Get backups list](#tag/Environment-Backups%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1backups%2Fget)\nendpoint.\n"
      x-stability: EXPERIMENTAL
  /users/{userId}/keys:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserKeyCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: userId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKey'
          description: ''
      parameters:
        - required: true
          in: path
          name: userId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /projects/{projectId}/clear_build_cache:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project
      summary: Clear project build cache
      description: "On rare occasions, a project's build cache can become corrupted. This\nendpoint will entirely flush the project's build cache. More information\non [clearing the build cache can be found in our user documentation.](https://docs.platform.sh/development/troubleshoot.html#clear-the-build-cache)\n"
  /projects/{projectId}/variables:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectVariableCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project Variables
      summary: Add a project variable
      description: "Add a variable to a project. The `value` can be either a string or a JSON\nobject (default: string), as specified by the `is_json` boolean flag.\nSee the [Variables](https://docs.platform.sh/development/variables.html#project-variables)\nsection in our documentation for more information.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectVariable'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project Variables
      summary: Get list of project variables
      description: "Retrieve a list of objects representing the user-defined variables\nwithin a project.\n"
  /me/keys:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserKeyCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters: []
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserKey'
          description: ''
      parameters: []
      tags:
        - NO_INCLUDE
  /projects/{projectId}/environments/{environmentId}/activities/{activityId}/cancel:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - Activity
  /projects/{projectId}/activities/{activityId}/log: {}
  /projects/{projectId}/environments/{environmentId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Delete an environment
      description: Delete a specified environment.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Update an environment
      description: Update the details of a single existing environment.
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Get an environment
      description: Retrieve the details of a single existing environment.
  /: {}
  /projects/{projectId}/git/blobs:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blob'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /projects/{projectId}/environments/{environmentId}/redeploy:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Redeploy an environment
      description: Trigger the redeployment sequence of an environment.
  /projects/{projectId}/git/trees/{repositoryTreeId}:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tree'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: repositoryTreeId
          schema:
            type: string
      tags:
        - Repository
      summary: Get a tree object
      description: "Retrieve, by hash, the tree state represented by a commit.\nThe returned object's `tree` field contains a list of files and\ndirectories present in the tree.\n\nDirectories in the tree can be recursively retrieved by this endpoint\nthrough their hashes. Files in the tree can be retrieved by the\n[Get a blob object](#tag/Git-Repo%2Fpaths%2F~1projects~1%7BprojectId%7D~1git~1blobs~1%7BrepositoryBlobId%7D%2Fget)\nendpoint.\n"
  /projects/{projectId}/git/commits:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /projects/{projectId}/environments/{environmentId}/branch:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentBranchInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Branch an environment
      description: "Create a new environment as a branch of the current environment.\n"
  /projects/{projectId}/environments/{environmentId}/synchronize:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentSynchronizeInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Synchronize a child environment with its parent
      description: "This synchronizes the code and/or data of an environment with that of\nits parent, then redeploys the environment. Synchronization is only\npossible if a branch has no unmerged commits and it can be fast-forwarded.\n\nIf data synchronization is specified, the data in the environment will\nbe overwritten with that of its parent.\n"
  /projects/{projectId}/git/trees:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TreeCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tree'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /projects/{projectId}/environments/{environmentId}/access/{environmentAccessId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: environmentAccessId
          schema:
            type: string
      tags:
        - Environment Access
      summary: Remove a user from an environment
      description: "Remove a user from an environments's access control list\nusing the `id` of the entry in the access control list\nretrieved with the [Get environment access control list](#tag/Environment-Access%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1access%2Fget)\nendpoint.\n"
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: environmentAccessId
          schema:
            type: string
      tags:
        - Environment Access
      summary: Update an environment user's role
      description: "Update the role of a user from an environments's access control list\nusing the `id` of the entry in the access control list\nretrieved with the [Get environment access control list](#tag/Environment-Access%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1access%2Fget)\nendpoint.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: environmentAccessId
          schema:
            type: string
      tags:
        - Environment Access
      summary: Get a single environment ACL entry
      description: "Retrieve the details of a user from an environments's access control list\nusing the `id` of the entry in the access control list\nretrieved with the [Get environment access control list](#tag/Environment-Access%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1access%2Fget)\nendpoint.\n"
  /projects/{projectId}/system/dump:
    get:
      responses:
        default:
          content:
            text/plain:
              schema:
                type: string
          description: ''
      parameters:
        - name: projectId
          required: true
          in: path
          schema:
            type: string
      tags:
        - System Information
      summary: Greenlet dump
      description: Outputs a greenlet dump for the project.
  /projects/{projectId}/integrations/{integrationId}/activities/{activityId}/log: {}
  /projects/{projectId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project
      summary: Delete a project
      description: Delete a project from the platform
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project
      summary: Update a project's info
      description: Update the details about an existing project
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project
      summary: Get a project's info
      description: Retrieve the details about an existing project
  /projects/{projectId}/environments/{environmentId}/routes/{routeId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: routeId
          schema:
            type: string
      tags:
        - Routing
      summary: Delete a route
      description: "Remove a route from an environment using the `id` of the entry\nretrieved by the [Get environment routes list](#tag/Environment-Routes%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1routes%2Fget)\nendpoint.\n\nThis endpoint modifies an environment's `.platform/routes.yaml` file.\nFor routes to propagate to child environments, the child environments\nmust be synchronized with their parent.\n"
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutePatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: routeId
          schema:
            type: string
      tags:
        - Routing
      summary: Update a route
      description: "Update a route in an environment using the `id` of the entry\nretrieved by the [Get environment routes list](#tag/Environment-Routes%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1routes%2Fget)\nendpoint.\n\nThis endpoint modifies an environment's `.platform/routes.yaml` file.\nFor routes to propagate to child environments, the child environments\nmust be synchronized with their parent.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: routeId
          schema:
            type: string
      tags:
        - Routing
      summary: Get a route's info
      description: "Get details of a route from an environment using the `id` of the entry\nretrieved by the [Get environment routes list](#tag/Environment-Routes%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1routes%2Fget)\nendpoint.\n"
  /projects/{projectId}/integrations:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Third-Party Integrations
      summary: Integrate project with a third-party service
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Third-Party Integrations
      summary: Get list of existing integrations for a project
  /projects/{projectId}/certificates:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Cert Management
      summary: Add an SSL certificate
      description: "Add a single SSL certificate to a project.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Cert Management
      summary: Get list of SSL certificates
      description: "Retrieve a list of objects representing the SSL certificates\nassociated with a project.\n"
  /api_docs: {}
  /projects/{projectId}/environments/{environmentId}/backups/{backupId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: backupId
          schema:
            type: string
      tags:
        - Environment Backups
      summary: Delete an environment snapshot
      description: "Delete a specific backup from an environment using the `id`\nof the entry retrieved by the\n[Get backups list](#tag/Environment-Backups%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1backups%2Fget)\nendpoint.\n"
      x-stability: EXPERIMENTAL
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: backupId
          schema:
            type: string
      tags:
        - NO_INCLUDE
      x-stability: EXPERIMENTAL
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: backupId
          schema:
            type: string
      tags:
        - Environment Backups
      summary: Get an environment snapshot's info
      description: "Get the details of a specific backup from an environment using the `id`\nof the entry retrieved by the\n[Get backups list](#tag/Environment-Backups%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1backups%2Fget)\nendpoint.\n"
      x-stability: EXPERIMENTAL
  /projects/{projectId}/domains:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Domain Management
      summary: Add a project domain
      description: "Add a single domain to a project.\nIf the `ssl` field is left blank without an object containing\na PEM-encoded SSL certificate, a certificate will\n[be provisioned for you via Let's Encrypt.](https://docs.platform.sh/configuration/routes/https.html#lets-encrypt)\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Domain Management
      summary: Get list of project domains
      description: "Retrieve a list of objects representing the user-specified domains\nassociated with a project. Note that this does *not* return the\ndomains automatically assigned to a project that appear under\n\"Access site\" on the user interface.\n"
  /projects/{projectId}/environments/{environmentId}/deactivate:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Deactivate an environment
      description: "Destroy all services and data running on this environment so that\nonly the Git branch remains. The environment can be reactivated\nlater at any time; reactivating an environment will sync data\nfrom the parent environment and redeploy.\n\n**NOTE: ALL DATA IN THIS ENVIRONMENT WILL BE IRREVOCABLY LOST**\n"
  /projects/{projectId}/git/tags/{repositoryTagId}:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: repositoryTagId
          schema:
            type: string
      tags:
        - NO_INCLUDE
  /projects/{projectId}/environments/{environmentId}/initialize:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentInitializeInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Initialize a new environment
      description: "Initialize and configure a new environment with an existing repository.\nThe payload is the url of a git repository with a profile name:\n\n```\n{\n    \"repository\": \"git@github.com:platformsh/a-project-template.git@master\",\n    \"profile\": \"Example Project\",\n    \"files\": [\n      {\n        \"mode\": 0600,\n        \"path\": \"config.json\",\n        \"contents\": \"XXXXXXXX\"\n      }\n    ]\n}\n```\nIt can optionally carry additional files that will be committed to the\nrepository, the POSIX file mode to set on each file, and the base64-encoded\ncontents of each file.\n\nThis endpoint can also add a second repository\nURL in the `config` parameter that will be added to the contents of the first.\nThis allows you to put your application in one repository and the Platform.sh\nYAML configuration files in another.\n"
  /projects/{projectId}/deployments:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentTargetCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Deployment Target
        - Internal
      summary: Create a project deployment target
      description: "Set the deployment target information for a project.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentTarget'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Deployment Target
        - Internal
      summary: Get project deployment target info
      description: "The deployment target information for the project.\n"
  /projects/{projectId}/environments/{environmentId}/merge:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment
      summary: Merge an environment
      description: "Merge an environment into its parent. This means that code changes\nfrom the branch environment will be merged into the parent branch, and\nthe parent branch will be rebuilt and deployed with the new code changes,\nretaining the existing data in the parent environment.\n"
  /projects/{projectId}/settings:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - ProjectSettings
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSettingsPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project Settings
      summary: Update a project setting
      description: Update one or more project-level settings.
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSettings'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project Settings
      summary: Get list of project settings
      description: Retrieve the global settings for a project.
  /projects/{projectId}/git/refs:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ref'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Repository
      summary: Get list of repository refs
      description: "Retrieve a list of `refs/*` in the repository backing a project.\nThis endpoint functions similarly to `git show-ref`, with each\nreturned object containing a `ref` field with the ref's name,\nand an object containing the associated commit ID.\n\nThe returned commit ID can be used with the\n[Get a commit object](#tag/Git-Repo%2Fpaths%2F~1projects~1%7BprojectId%7D~1git~1commits~1%7BrepositoryCommitId%7D%2Fget)\nendpoint to retrieve information about that specific commit.\n"
  /projects/{projectId}/environments/{environmentId}/source_operation:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentSourceOperationInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Source Operations
      summary: '[ALPHA] Trigger a source operation'
      description: "This endpoint triggers a source code operation as defined in the `source.operations`\nkey in a project's `.platform.app.yaml` configuration. More information\non source code operations is\n[available in our user documentation](https://docs.platform.sh/configuration/app/source-operations.html).\n"
  /projects/{projectId}/environments/{environmentId}/access:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentAccessCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment Access
      summary: Add a user to an environment ACL
      description: Add a user to an environment's access control list
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAccess'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment Access
      summary: Get an environment's access control list
      description: "Retrieve a list of objects specifying the users\nwith access to an environment and those users' roles.\n"
  /projects/{projectId}/integrations/{integrationId}/activities:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
      tags:
        - Activity
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
      tags:
        - Activity
  /projects/{projectId}/environments/{environmentId}/activities:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment Activity
      summary: Get environment activity log
      description: "Retrieve an environment's activity log. This returns a list of object\nwith records of actions such as:\n\n- Commits being pushed to the repository\n- A new environment being branched out from the specified environment\n- A snapshot being created of the specified environment\n\nThe object includes a timestamp of when the action occurred\n(`created_at`), when the action concluded (`updated_at`),\nthe current `state` of the action, the action's completion\npercentage (`completion_percent`), and other related information in\nthe `payload`.\n\nThe contents of the `payload` varies based on the `type` of the\nactivity. For example:\n\n- An `environment.branch` action's `payload` can contain objects\nrepresenting the `parent` environment and the branching action's\n`outcome`.\n\n- An `environment.push` action's `payload` can contain objects\nrepresenting the `environment`, the specific `commits` included in\nthe push, and the `user` who pushed.\n"
  /projects/{projectId}/activities/{activityId}/cancel:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - Activity
  /projects/{projectId}/integrations/{integrationId}/activities/{activityId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - Activity
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - Activity
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - Activity
  /projects/{projectId}/integrations/{integrationId}/activities/{activityId}/cancel:
    post:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - Activity
  /projects/{projectId}/activities/{activityId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - Project Activity
      summary: Get a project activity log entry
      description: "Retrieve a single activity log entry as specified by an\n`id` returned by the\n[Get project activity log](#tag/Project-Activity%2Fpaths%2F~1projects~1%7BprojectId%7D~1activities%2Fget)\nendpoint. See the documentation on that endpoint for details about\nthe information this endpoint can return.\n"
  /projects/{projectId}/environments/{environmentId}/activities/{activityId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: activityId
          schema:
            type: string
      tags:
        - Environment Activity
      summary: Get an environment activity log entry
      description: "Retrieve a single environment activity entry as specified by an\n`id` returned by the\n[Get environment activities list](#tag/Environment-Activity%2Fpaths%2F~1projects~1%7BprojectId%7D~1environments~1%7BenvironmentId%7D~1activities%2Fget)\nendpoint. See the documentation on that endpoint for details about\nthe information this endpoint can return.\n"
  /projects/{projectId}/environments/{environmentId}/routes:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Routing
      summary: Create a new route
      description: "Add a new route to the specified environment. More information about\nhow routes are defined can be found in the [Routes](https://docs.platform.sh/configuration/routes.html)\nsection of the documentation.\n\nThis endpoint modifies an environment's `.platform/routes.yaml` file.\nFor routes to propagate to child environments, the child environments\nmust be synchronized with their parent.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Routing
      summary: Get list of routes
      description: "Retrieve a list of objects containing route definitions for\na specific environment. The definitions returned by this endpoint\nare those present in an environment's `.platform/routes.yaml` file.\n"
  /projects/{projectId}/certificates/{certificateId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: certificateId
          schema:
            type: string
      tags:
        - Cert Management
      summary: Delete an SSL certificate
      description: "Delete a single SSL certificate associated with a project.\n"
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: certificateId
          schema:
            type: string
      tags:
        - Cert Management
      summary: Update an SSL certificate
      description: "Update a single SSL certificate associated with a project.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: certificateId
          schema:
            type: string
      tags:
        - Cert Management
      summary: Get an SSL certificate
      description: "Retrieve information about a single SSL certificate\nassociated with a project.\n"
  /projects/{projectId}/git/refs/{repositoryRefId}:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ref'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: repositoryRefId
          schema:
            type: string
      tags:
        - Repository
      summary: Get a ref object
      description: "Retrieve the details of a single `refs` object in the repository\nbacking a project. This endpoint functions similarly to\n`git show-ref <pattern>`, although the pattern must be a full ref `id`,\nrather than a matching pattern.\n\n*NOTE: The `{repositoryRefId}` must be properly escaped.*\nThat is, the ref `refs/heads/master` is accessible via\n`/projects/{projectId}/git/refs/heads%2Fmaster`.\n"
  /projects/{projectId}/environments:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Environment
      summary: Create a new environment
      description: "Create a new environment on a project and define the configuration\ninformation associated with the environment.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Environment
      summary: Get list of project environments
      description: "Retrieve a list of a project's existing environments and the\ninformation associated with each environment.\n"
  /projects/{projectId}/domains/{domainId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: domainId
          schema:
            type: string
      tags:
        - Domain Management
      summary: Delete a project domain
      description: "Delete a single user-specified domain associated with a project.\n"
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: domainId
          schema:
            type: string
      tags:
        - Domain Management
      summary: Update a project domain
      description: "Update the information associated with a single user-specified\ndomain associated with a project.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: domainId
          schema:
            type: string
      tags:
        - Domain Management
      summary: Get a project domain
      description: "Retrieve information about a single user-specified domain\nassociated with a project.\n"
  /projects/{projectId}/environments/{environmentId}/backups:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - NO_INCLUDE
      x-stability: EXPERIMENTAL
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment Backups
      summary: Get an environment's snapshot list
      description: "Retrieve a list of objects representing backups of this environment.\n"
      x-stability: EXPERIMENTAL
  /projects/{projectId}/integrations/{integrationId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
      tags:
        - Third-Party Integrations
      summary: Delete an existing third-party integration
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
      tags:
        - Third-Party Integrations
      summary: Update an existing third-party integration
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: integrationId
          schema:
            type: string
      tags:
        - Third-Party Integrations
      summary: Get information about existing an third-party integration
  /projects/{projectId}/environments/{environmentId}/deployments/{deploymentId}:
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
        - required: true
          in: path
          name: deploymentId
          schema:
            type: string
      tags:
        - Internal
      summary: Get a single environment deployment
  /projects/{projectId}/capabilities:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCapabilitiesPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - NO_INCLUDE
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCapabilities'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
      tags:
        - Project
      summary: Get a project's capabilities
      description: "Get a list of capabilities on a project, as defined by the billing system.\nFor instance, one special capability that could be defined on a project is\nlarge development environments.\n"
  /projects/{projectId}/environments/{environmentId}/activities/{activityId}/log: {}
  /projects:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters: []
      tags:
        - NO_INCLUDE
      summary: Create a new project
      description: Create an empty project on the platform
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      parameters: []
      tags:
        - NO_INCLUDE
      summary: Get list of projects
      description: Retrieve list of projects associated with account
  /projects/{projectId}/deployments/{deploymentTargetConfigurationId}:
    delete:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: deploymentTargetConfigurationId
          schema:
            type: string
      tags:
        - Deployment Target
        - Internal
      summary: Delete a single project deployment target
      description: "Delete a single deployment target configuration associated with a specific project.\n"
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentTargetPatch'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: deploymentTargetConfigurationId
          schema:
            type: string
      tags:
        - Deployment Target
        - Internal
      summary: Update a project deployment
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentTarget'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: deploymentTargetConfigurationId
          schema:
            type: string
      tags:
        - Deployment Target
        - Internal
      summary: Get a single project deployment target
      description: "Get a single deployment target configuration of a project.\n"
  /projects/{projectId}/environments/{environmentId}/variables:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableCreateInput'
        required: true
        description: ''
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptedResponse'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment Variables
      summary: Add an environment variable
      description: "Add a variable to an environment. The `value` can be either a string or a JSON\nobject (default: string), as specified by the `is_json` boolean flag.\nAdditionally, the inheritability of an environment variable can be\ndetermined through the `is_inheritable` flag (default: true).\nSee the [Variables](https://docs.platform.sh/development/variables.html#platformsh-environment-variables)\nsection in our documentation for more information.\n"
    get:
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
          description: ''
      parameters:
        - required: true
          in: path
          name: projectId
          schema:
            type: string
        - required: true
          in: path
          name: environmentId
          schema:
            type: string
      tags:
        - Environment Variables
      summary: Get list of environment variables
      description: "Retrieve a list of objects representing the user-defined variables\nwithin an environment.\n"
components:
  schemas:
    Order:
      description: The order object.
      properties:
        id:
          description: The ID of the order.
          type: string
        status:
          description: The status of the Platform.sh subscription.
          type: string
          enum:
            - completed
            - past_due
            - pending
            - canceled
            - payment_failed_soft_decline
            - payment_failed_hard_decline
        owner:
          description: The UUID of the owner.
          type: string
          format: uuid
        address:
          $ref: '#/components/schemas/Address'
        vat_number:
          description: An identifier used in many countries for value added tax purposes.
          type: string
          format: string
        billing_period_start:
          description: The time when the billing period of the order started.
          type: string
        billing_period_end:
          description: The time when the billing period of the order ended.
          type: string
        paid_on:
          description: The time when the order was successfully charged.
          type: string
        total:
          description: The total of the order.
          type: integer
        components:
          $ref: '#/components/schemas/Components'
        currency:
          description: The order currency code.
          type: integer
        invoice_url:
          description: A link to the PDF invoice.
          type: integer
      type: object
    Address:
      description: The address of the user.
      properties:
        country:
          description: Two-letter country codes are used to represent countries and states
          type: string
          format: ISO ALPHA-2
        name_line:
          description: The full name of the user
          type: string
          format: string
        premise:
          description: Premise (i.e. Apt, Suite, Bldg.)
          type: string
        sub_premise:
          description: Sub Premise (i.e. Suite, Apartment, Floor, Unknown.
          type: string
        thoroughfare:
          description: The address of the user
          type: string
        administrative_area:
          description: The administrative area of the user address
          type: string
          format: ISO ALPHA-2
        sub_administrative_area:
          description: The sub-administrative area of the user address
          type: string
          format: string
        locality:
          description: The locality of the user address
          type: string
          format: string
        dependent_locality:
          description: The dependant_locality area of the user address
          type: string
          format: string
        postal_code:
          description: The postal code area of the user address
          type: integer
      type: object
    Components:
      description: The components of the project
      properties:
        voucher/vat/baseprice:
          description: stub
          type: object
      type: object
    PlanRecords:
      description: The plan record object.
      properties:
        id:
          description: The unique ID of the plan record.
          type: string
        owner:
          description: The UUID of the owner.
          type: string
          format: uuid
        subscription_id:
          description: The ID of the subscription this record pertains to.
          type: integer
        sku:
          description: The product SKU of the plan that this record represents.
          type: string
          format: string
        plan:
          description: The machine name of the plan that this record represents.
          type: string
          format: string
        options:
          description: Restful plugin exposing API at /records/plan.
          type: array
          items:
            description: The SKU of an option.
            type: string
            format: string
        start:
          description: The start timestamp of this plan record (ISO 8601).
          type: string
        end:
          description: The end timestamp of this plan record (ISO 8601).
          type: string
        status:
          description: 'The status of the subscription during this record: active or suspended.'
          type: string
          format: string
      type: object
    Usage:
      description: The usage object.
      properties:
        id:
          description: The unique ID of the usage record.
          type: string
        subscription_id:
          description: The ID of the subscription.
          type: integer
        usage_group:
          description: The type of usage that this record represents.
          type: string
        quantity:
          description: The quantity used.
          type: integer
        start:
          description: The start timestamp of this usage record (ISO 8601).
          type: string
        end:
          description: The end timestamp of this usage record (ISO 8601).
          type: string
        plan_record:
          description: The plan record relating to this usage record.
          type: integer
      type: object
    OwnerInfo:
      description: Project owner information that can be exposed to collaborators.
      properties:
        type:
          description: Type of the owner, usually 'user'.
          type: string
        username:
          description: The username of the owner.
          type: string
        display_name:
          description: The full name of the owner.
          type: string
      type: object
    User:
      description: The user object.
      properties:
        id:
          description: The UUID of the owner.
          type: string
          format: uuid
        uuid:
          description: The UUID of the owner.
          type: string
          format: uuid
        username:
          description: The username of the owner.
          type: string
        display_name:
          description: The full name of the owner.
          type: string
        status:
          description: Status of the user. 0 = blocked; 1 = active.
          type: integer
        mail:
          description: The email address of the owner.
          type: string
          format: email
        ssh_keys:
          description: The list of user's public SSH keys.
          type: array
          items:
            $ref: '#/components/schemas/SSHKey'
        has_key:
          description: The indicator whether the user has a public ssh key on file or not.
          type: boolean
        projects:
          type: array
          items:
            properties:
              id:
                description: The unique ID string of the Platform.sh project.
                type: string
              name:
                description: The name given to the Platform.sh project. Appears as the title in the Platform.sh UI.
                type: string
              title:
                description: The name given to the Platform.sh project. Appears as the title in the Platform.sh UI.
                type: string
              cluster:
                description: The machine name of the region where the Platform.sh project is located. Cannot be changed after project creation.
                type: string
              cluster_label:
                description: The human-readable name of the Platform.sh region where the project is located.
                type: string
              region:
                description: The machine name of the region where the Platform.sh project is located. Cannot be changed after project creation.
                type: string
              region_label:
                description: The human-readable name of the Platform.sh region where the project is located.
                type: string
              uri:
                description: The URL for the project on the Platform.sh UI website.
                type: string
              endpoint:
                description: The project API endpoint for the Platform.sh project.
                type: string
              license_id:
                description: The ID of the subscription.
                type: integer
              owner:
                description: The UUID of the owner.
                type: string
                format: uuid
              owner_info:
                $ref: '#/components/schemas/OwnerInfo'
              plan:
                description: The Platform.sh plan type of the subscription.
                type: string
                format: string
              subscription_id:
                description: The ID of the subscription.
                type: integer
              status:
                description: The status of the project.
                type: string
                format: string
              vendor:
                description: The machine name of the vendor the subscription belongs to.
                type: string
                format: string
              vendor_label:
                description: The machine name of the vendor the subscription belongs to.
                type: string
                format: string
              vendor_website:
                description: The URL of the vendor the subscription belongs to.
                type: string
                format: url
              vendor_resources:
                description: The link to the resources of the vendor the subscription belongs to.
                type: string
                format: string
            type: object
        sequence:
          description: The sequential ID of the user.
          type: integer
        roles:
          type: array
          items:
            description: The user role name.
            type: string
            format: string
        picture:
          description: The URL of the user image.
          type: string
          format: url
        tickets:
          description: Number of support tickets by status.
          type: object
        trial:
          description: The indicator whether the user is in trial or not.
          type: boolean
      type: object
    SSHKey:
      description: The ssh key object.
      properties:
        key_id:
          description: The ID of the public key.
          type: integer
        uid:
          description: The internal user ID.
          type: integer
        fingerprint:
          description: The fingerprint of the public key.
          type: string
        title:
          description: The title of the public key.
          type: string
        value:
          description: The actual value of the public key.
          type: string
        changed:
          description: The time of the last key modification (ISO 8601)
          type: string
      type: object
    Plan:
      description: The hosting plan.
      properties:
        name:
          description: The machine name of the plan.
          type: string
        label:
          description: The human-readable name of the plan.
          type: string
      type: object
    Region:
      description: The hosting region.
      properties:
        id:
          description: The ID of the region.
          type: string
        label:
          description: The human-readable name of the region.
          type: string
        zone:
          description: Geographical zone of the region
          type: string
        selection_label:
          description: The label to display when choosing between regions for new projects.
          type: string
        project_label:
          description: The label to display on existing projects.
          type: string
        provider:
          description: Cloud hosting provider (AWS, Azure, Orange)
          type: string
        available:
          description: 'Indicator whether or not this region is selectable during the checkout. Possible values: 0 and 1. Regions with available=0 will never show up during checkout.'
          type: integer
        private:
          description: 'Indicator whether or not this platform is for private use only. Possible values: 0 and 1.'
          type: integer
        endpoint:
          description: Link to the region API endpoint.
          type: string
      type: object
    ProjectLink:
      description: The project link object
      properties:
        id:
          description: The ID of the project
          type: string
        endpoint:
          description: The API endpoint URL
          type: string
        ui:
          description: The UI URL
          type: string
        subscription_id:
          description: The ID of the subscription
          type: integer
        owner:
          description: The UUID of the project owner
          type: string
          format: uuid
        owner_info:
          $ref: '#/components/schemas/OwnerInfo'
      type: object
    Subscription:
      description: The subscription object.
      properties:
        id:
          description: The internal ID of the subscription.
          type: string
        status:
          description: The status of the Platform.sh subscription.
          type: string
          enum:
            - requested
            - provisioning failure
            - provisioning
            - active
            - suspended
            - deleted
        created_at:
          description: The creation date of the subscription.
          type: string
          format: date
        owner:
          description: The UUID of the owner.
          type: string
          format: uuid
        owner_info:
          $ref: '#/components/schemas/OwnerInfo'
        vendor:
          description: The machine name of the vendor the subscription belongs to.
          type: string
          format: string
        plan:
          description: The Platform.sh plan type of the subscription.
          type: string
          format: string
        environments:
          description: The number of environments which can be provisioned on the Platform.sh project.
          type: integer
        storage:
          description: The total storage available to each Platform.sh environment, in MiB. Only multiples of 1024 are accepted as legal values.
          type: integer
        user_licenses:
          description: The number of chargeable users who currently have access to the project. Manage this value by adding and removing users through the Platform project API. Platform.sh staff and billing/administrative contacts can be added to a project for no charge. Contact Platform.sh with questions about user licenses.
          type: integer
        project_id:
          description: The unique ID string of the Platform.sh project.
          type: string
        project_endpoint:
          description: The project API endpoint for the Platform.sh project.
          type: string
        project_title:
          description: The name given to the Platform.sh project. Appears as the title in the Platform.sh UI.
          type: string
        project_region:
          description: The machine name of the region where the Platform.sh project is located. Cannot be changed after project creation.
          type: string
        project_region_label:
          description: The human-readable name of the Platform.sh region where the project is located.
          type: string
        project_notes:
          description: The CSE Notes.
          type: string
        project_ui:
          description: The URL for the project on the Platform.sh UI website.
          type: string
        project_options:
          $ref: '#/components/schemas/ProjectOptions'
        options_url:
          description: The URL of the project options file provided, if provided.
          type: string
        enterprise_tag:
          description: The enterprise application identifier associated with this project.
          type: string
        locked:
          description: Whether the subscription is locked from plan and usage changes.
          type: boolean
        invoiced:
          description: Whether the subscription is invoiced.
          type: boolean
        support_tier:
          description: The support tier for this subscription.
          type: string
        services:
          description: Details of the attached services.
          type: array
          items:
            description: Details of a service
            type: object
      type: object
    ProjectOptions:
      description: The project options object.
      properties:
        defaults:
          description: stub
          type: object
        enforced:
          description: stub
          type: object
        regions:
          description: stub
          type: object
        plans:
          description: stub
          type: object
      type: object
    PaymentSource:
      description: The payment source
      properties:
        id:
          description: The ID of the payment source.
          type: string
        source_type:
          description: The source type of the payment source.
          type: string
        name:
          description: The name of the customer.
          type: string
        number:
          description: The partially sanitized number of the payment source (credit card number, or an iban number.
          type: string
        data:
          description: The data object for a particular source type. Different source types will have different schemas for the data property.
          type: object
      type: object
    HalLinks:
      description: Links to _self, and previous or next page, given that they exist.
      properties:
        self:
          description: The cardinal link to the self resource.
          properties:
            title:
              description: Title of the link
              type: string
            href:
              description: URL of the link
              type: string
          type: object
        previous:
          description: The link to the previous resource page, given that it exists.
          properties:
            title:
              description: Title of the link
              type: string
            href:
              description: URL of the link
              type: string
          type: object
        next:
          description: The link to the next resource page, given that it exists.
          properties:
            title:
              description: Title of the link
              type: string
            href:
              description: URL of the link
              type: string
          type: object
      type: object
    Profile:
      description: The user profile.
      properties:
        id:
          description: The user's unique ID.
          type: string
          format: uuid
        display_name:
          description: The user's display name.
          type: string
        email:
          description: The user's email address.
          type: string
          format: email
        username:
          description: The user's username.
          type: string
        picture:
          description: The URL of the user's picture.
          type: string
          format: url
        company_type:
          description: The company type.
          type: string
        company_name:
          description: The name of the company.
          type: string
        vat_number:
          description: The vat number of the user.
          type: string
        company_role:
          description: The role of the user in the company.
          type: string
        website_url:
          description: The user or company website.
          type: string
        new_ui:
          description: Whether the new UI features are enabled for this user.
          type: boolean
        ui_colorscheme:
          description: The user's chosen color scheme for user interfaces.
          type: string
        default_catalog:
          description: The URL of a catalog file which overrides the default.
          type: string
        project_options_url:
          description: The URL of an account-wide project options file.
          type: string
        marketing:
          description: Flag if the user agreed to receive marketing communication.
          type: boolean
        created_at:
          description: The timestamp representing when the user account was created.
          type: string
          format: date-time
        updated_at:
          description: The timestamp representing when the user account was last modified.
          type: string
          format: date-time
        billing_contact:
          description: The e-mail address of a contact to whom billing notices will be sent.
          type: string
          format: email
        security_contact:
          description: The e-mail address of a contact to whom security notices will be sent.
          type: string
          format: email
      type: object
    Ticket:
      description: The support ticket object.
      properties:
        ticket_id:
          description: The ID of the ticket.
          type: integer
        owner:
          description: The UUID of the owner.
          type: string
          format: uuid
        url:
          description: A link to the Zendesk support ticket.
          type: string
        created:
          description: The time when the support ticket was created.
          type: string
          format: date-time
        updated:
          description: The time when the support ticket was updated.
          type: string
          format: date-time
        type:
          description: A type of the ticket.
          type: string
          enum:
            - problem
            - task
            - incident
            - question
        subject:
          description: A title of the ticket.
          type: string
        description:
          description: The description body of the support ticket.
          type: string
        priority:
          description: A priority of the ticket.
          type: string
          enum:
            - low
            - normal
            - high
            - urgent
        status:
          description: The status of the support ticket.
          type: string
          enum:
            - closed
            - deleted
            - hold
            - new
            - open
            - pending
            - solved
        recipient:
          description: Email address of the ticket recipient, defaults to support@platform.sh.
          type: string
        requester_id:
          description: UUID of the ticket requester. Converted from the ZID value.
          type: string
          format: uuid
        submitter_id:
          description: UUID of the ticket submitter. Converted from the ZID value.
          type: string
          format: uuid
        assignee_id:
          description: UUID of the ticket assignee. Converted from the ZID value.
          type: string
          format: uuid
        organization_id:
          description: A reference id that is usable to find the commerce license.
          type: string
        has_incidents:
          description: Whether or not this ticket has incidents.
          type: boolean
        due:
          description: A time that the ticket is due at.
          type: string
          format: date-time
        tags:
          description: A list of tags assigned to the ticket.
          type: string
        subscription_id:
          description: see create().
          type: string
        attachment:
          description: see create()
          type: string
        attachment_filename:
          description: see create().
          type: string
        body:
          description: see create().
          type: string
        ticket_group:
          description: Maps to zendesk field 'Request group'.
          type: string
        assignee:
          description: Agent assigned to your request'.
          type: string
          format: uuid
        support_plan:
          description: Maps to zendesk field 'The support plan associated with this ticket.
          type: string
        affected_url:
          description: The affected URL associated with the support ticket.
          type: string
          format: url
        queue:
          description: The queue the support ticket is in.
          type: string
        issue_type:
          description: The issue type of the support ticket.
          type: string
        resolution_time:
          description: Maps to zendesk field 'Resolution Time'.
          type: string
          format: date-time
        response_time:
          description: Maps to zendesk field 'Response Time (time from request to reply).
          type: string
          format: date-time
        project_url:
          description: Maps to zendesk field 'Project URL'.
          type: string
          format: url
        region:
          description: Maps to zendesk field 'Region'.
          type: string
        category:
          description: Maps to zendesk field 'Category'.
          type: string
          enum:
            - access
            - billing_question
            - complaint
            - compliance_question
            - configuration_change
            - general_question
            - incident_outage
            - bug_report
            - report_a_gui_bug
        environment:
          description: Maps to zendesk field 'Environment'.
          type: string
          enum:
            - env_development
            - env_staging
            - env_production
        ticket_sharing_status:
          description: Maps to zendesk field 'Ticket Sharing Status'.
          type: string
          enum:
            - ts_sent_to_platform
            - ts_accepted_by_platform
            - ts_returned_from_platform
            - ts_solved_by_platform
            - ts_rejected_by_platform
        application_ticket_url:
          description: Maps to zendesk field 'Application Ticket URL'.
          type: string
          format: url
        infrastructure_ticket_url:
          description: Maps to zendesk field 'Infrastructure Ticket URL'.
          type: string
          format: url
        jira:
          description: A list of JIRA issues related to the support ticket.
          type: array
          items:
            properties:
              id:
                description: The id of the query.
                type: integer
              ticket_id:
                description: The id of the ticket.
                type: integer
              issue_id:
                description: The issue id number.
                type: integer
              issue_key:
                description: The issue key.
                type: string
              created_at:
                description: The created at timestamp.
                type: number
                format: float
              updated_at:
                description: The updated at timestamp.
                type: number
                format: float
            type: object
      type: object
    SlackIntegration:
      additionalProperties: false
      required:
        - type
        - token
        - channel
      type: object
      properties:
        token:
          type: string
          title: The Slack token to use
        type:
          type: string
          title: Integration type
        channel:
          type: string
          title: The Slack channel to post messages to
    EnvironmentInitializeInput:
      additionalProperties: false
      required:
        - profile
        - repository
        - config
        - files
      type: object
      properties:
        profile:
          type: string
          title: Name of the profile to show in the UI
        files:
          items:
            additionalProperties: false
            required:
              - path
              - mode
              - contents
            type: object
            properties:
              path:
                type: string
                title: The path to the file.
              mode:
                type: integer
                title: The octal value of the file protection mode.
              contents:
                type: string
                title: The contents of the file (base64 encoded).
          type: array
          title: A list of files to add to the repository during initialization
        config:
          type: string
          title: Repository to clone the configuration files from
        repository:
          type: string
          title: Repository to clone from
    ScriptIntegration:
      additionalProperties: false
      required:
        - type
        - events
        - environments
        - excluded_environments
        - states
        - script
      type: object
      properties:
        script:
          type: string
          title: The script to run
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    ProjectCreateInput:
      additionalProperties: false
      required:
        - title
        - timezone
        - region
      type: object
      properties:
        description:
          type: string
          title: Description
        title:
          type: string
          title: Title
        region:
          type: string
          title: Region
        default_domain:
          type: string
          title: Default domain
        timezone:
          type: string
          title: Timezone of the project
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
    RouteCreateInput:
      oneOf:
        - $ref: '#/components/schemas/RedirectRouteCreateInput'
        - $ref: '#/components/schemas/UpstreamRouteCreateInput'
    DedicatedDeploymentTargetPatch:
      additionalProperties: false
      required:
        - type
        - name
      type: object
      properties:
        type:
          type: string
          title: The type of the deployment target.
        name:
          type: string
          title: The name of the deployment target.
    SlackIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - token
        - channel
      type: object
      properties:
        token:
          type: string
          title: The Slack token to use
        type:
          type: string
          title: Integration type
        channel:
          type: string
          title: The Slack channel to post messages to
    GitLabIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - token
        - project
      type: object
      properties:
        build_wip_merge_requests:
          type: boolean
          title: Whether or not to build work in progress merge requests (requires `build_merge_requests`).
        build_merge_requests:
          type: boolean
          title: Whether or not to build merge requests.
        merge_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building merge requests.
        base_url:
          type: string
          title: The base URL of the GitLab installation.
        project:
          type: string
          title: The GitLab project (in the form `namespace/repo`).
        token:
          type: string
          title: The GitLab private token.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    SumologicIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - url
      type: object
      properties:
        category:
          type: string
          title: The Category used to easy filtering (sent as X-Sumo-Category header)
        url:
          type: string
          title: The Sumologic HTTPS endpoint
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    UserCreateInput:
      additionalProperties: false
      type: object
    EnvironmentSynchronizeInput:
      additionalProperties: false
      required:
        - synchronize_code
        - rebase
        - synchronize_data
      type: object
      properties:
        synchronize_data:
          type: boolean
          title: Synchronize data?
        rebase:
          type: boolean
          title: Synchronize code by rebasing instead of merging
        synchronize_code:
          type: boolean
          title: Synchronize code?
    BackupPatch:
      additionalProperties: false
      type: object
      properties:
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
    BitbucketServerIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - url
        - username
        - token
        - project
        - repository
      type: object
      properties:
        username:
          type: string
          title: The Bitbucket Server user.
        pull_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building merge requests.
        repository:
          type: string
          title: The Bitbucket Server repository
        url:
          type: string
          title: The base URL of the Bitbucket Server installation.
        project:
          type: string
          title: The Bitbucket Server project
        token:
          type: string
          title: The Bitbucket Server personal access token.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    BitbucketIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - repository
      type: object
      properties:
        app_credentials:
          additionalProperties: false
          required:
            - key
            - secret
          type: object
          properties:
            secret:
              type: string
              title: The OAuth consumer secret.
            key:
              type: string
              title: The OAuth consumer key.
          title: The OAuth2 consumer information (optional).
        repository:
          type: string
          title: The Bitbucket repository (in the form `user/repo`).
        resync_pull_requests:
          type: boolean
          title: Whether or not pull request environment data should be re-synced on every build.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        addon_credentials:
          additionalProperties: false
          required:
            - addon_key
            - client_key
            - shared_secret
          type: object
          properties:
            client_key:
              type: string
              title: The client key (public identifier).
            shared_secret:
              type: string
              title: The secret of the client.
            addon_key:
              type: string
              title: The addon key (public identifier).
          title: The addon credential information (optional).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    IntegrationCreateInput:
      oneOf:
        - $ref: '#/components/schemas/BitbucketIntegrationCreateInput'
        - $ref: '#/components/schemas/BitbucketServerIntegrationCreateInput'
        - $ref: '#/components/schemas/GithubIntegrationCreateInput'
        - $ref: '#/components/schemas/GitLabIntegrationCreateInput'
        - $ref: '#/components/schemas/EmailIntegrationCreateInput'
        - $ref: '#/components/schemas/PagerDutyIntegrationCreateInput'
        - $ref: '#/components/schemas/SlackIntegrationCreateInput'
        - $ref: '#/components/schemas/HealthWebHookIntegrationCreateInput'
        - $ref: '#/components/schemas/HipChatIntegrationCreateInput'
        - $ref: '#/components/schemas/NewRelicIntegrationCreateInput'
        - $ref: '#/components/schemas/ScriptIntegrationCreateInput'
        - $ref: '#/components/schemas/SumologicIntegrationCreateInput'
        - $ref: '#/components/schemas/WebHookIntegrationCreateInput'
    RedirectRouteCreateInput:
      additionalProperties: false
      required:
        - type
        - to
      type: object
      properties:
        tls:
          additionalProperties: false
          type: object
          properties:
            client_authentication:
              type: string
              title: The type of client authentication to request.
            min_version:
              enum:
                - TLSv1.1
                - TLSv1.0
                - TLSv1.3
                - TLSv1.2
              type: string
              title: The minimum TLS version to support.
            client_certificate_authorities:
              items:
                type: string
              type: array
              title: Certificate authorities to validate the client certificate against. If not specified, a default set of trusted CAs will be used.
            strict_transport_security:
              additionalProperties: false
              type: object
              properties:
                preload:
                  type: boolean
                  title: Whether the strict transport security policy should be preloaded in browsers.
                include_subdomains:
                  type: boolean
                  title: Whether the strict transport security policy should include all subdomains.
                enabled:
                  type: boolean
                  title: Whether strict transport security is enabled or not.
              title: Strict-Transport-Security options.
          title: TLS settings for the route.
        redirects:
          title: The configuration of the redirects.
          required:
            - paths
          additionalProperties: false
          type: object
          properties:
            paths:
              additionalProperties:
                additionalProperties: false
                required:
                  - to
                type: object
                properties:
                  code:
                    type: integer
                    title: The redirect code to use.
                  expires:
                    type: string
                    title: The amount of time, in seconds, to cache the redirects.
                  to:
                    type: string
                    title: The URL to redirect to.
                  prefix:
                    type: boolean
                    title: Whether to redirect all the paths that start with the path.
                  append_suffix:
                    type: boolean
                    title: Whether to append the incoming suffix to the redirected URL.
                  regexp:
                    type: boolean
                    title: Whether the path is a regular expression.
              type: object
              title: The paths to redirect
            expires:
              type: string
              title: The amount of time, in seconds, to cache the redirects.
        primary:
          type: boolean
          title: This route is the primary route of the environment
        to:
          type: string
          title: Redirect destination
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        type:
          type: string
          title: Route type.
        id:
          type: string
          title: Route Identifier
    EnvironmentAccessCreateInput:
      additionalProperties: false
      required:
        - role
      type: object
      properties:
        role:
          type: string
          title: Role
        user:
          type: string
          title: User
        email:
          type: string
          title: E-mail address
    ProjectVariableCreateInput:
      additionalProperties: false
      required:
        - name
      type: object
      properties:
        name:
          type: string
          title: Name
        is_json:
          type: boolean
          title: The variable is a JSON string
        is_sensitive:
          type: boolean
          title: The variable is sensitive
        value:
          type: string
          title: Value
        visible_build:
          type: boolean
          title: The variable is visible during build
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        visible_runtime:
          type: boolean
          title: The variable is visible at runtime
    ProjectAccess:
      additionalProperties: false
      required:
        - role
      type: object
      properties:
        role:
          type: string
          title: Role
        user:
          type: string
          title: User
        email:
          type: string
          title: E-mail address
    SumologicIntegration:
      additionalProperties: false
      required:
        - type
        - events
        - environments
        - excluded_environments
        - states
        - url
        - category
      type: object
      properties:
        category:
          type: string
          title: The Category used to easy filtering (sent as X-Sumo-Category header)
        url:
          type: string
          title: The Sumologic HTTPS endpoint
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    ActivityCreateInput:
      additionalProperties: false
      type: object
    ProjectAccessCreateInput:
      additionalProperties: false
      required:
        - role
      type: object
      properties:
        role:
          type: string
          title: Role
        user:
          type: string
          title: User
        email:
          type: string
          title: E-mail address
    HipChatIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - token
        - room
      type: object
      properties:
        room:
          type: string
          title: The room ID or name to notify of the activities
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        token:
          type: string
          title: The HipChat token
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    Project:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - attributes
        - title
        - description
        - subscription
        - owner
        - default_domain
        - status
        - timezone
        - region
        - repository
      type: object
      properties:
        status:
          additionalProperties: false
          required:
            - code
            - message
          type: object
          properties:
            message:
              type: string
              title: Status text
            code:
              type: string
              title: Status code
          title: Status
        description:
          type: string
          title: Description
        repository:
          additionalProperties: false
          required:
            - url
            - client_ssh_key
          type: object
          properties:
            url:
              type: string
              title: Git URL
            client_ssh_key:
              type: string
              title: SSH Key used to access external private repositories.
          title: Repository information
        title:
          type: string
          title: Title
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Update date
          type: string
          format: date-time
        default_domain:
          type: string
          title: Default domain
        timezone:
          type: string
          title: Timezone of the project
        owner:
          type: string
          title: Owner
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        region:
          type: string
          title: Region
        subscription:
          additionalProperties: false
          required:
            - license_uri
            - plan
            - environments
            - storage
            - included_users
            - subscription_management_uri
            - restricted
            - suspended
            - user_licenses
          type: object
          properties:
            user_licenses:
              type: integer
              title: Current number of users
            restricted:
              type: boolean
              title: True if subscription attributes, like number of users, are frozen
            included_users:
              type: integer
              title: Number of users
            storage:
              type: integer
              title: Size of storage (in MB)
            environments:
              type: integer
              title: Number of environments
            license_uri:
              type: string
              title: URI of the subscription
            plan:
              type: string
              title: Plan level
            suspended:
              type: boolean
              title: Whether or not the subscription is suspended
            subscription_management_uri:
              type: string
              title: URI for managing the subscription
          title: Subscription information
    HipChatIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - token
        - room
      type: object
      properties:
        room:
          type: string
          title: The room ID or name to notify of the activities
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        token:
          type: string
          title: The HipChat token
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    ActivityPatch:
      additionalProperties: false
      type: object
    Commit:
      additionalProperties: false
      required:
        - sha
        - author
        - committer
        - message
        - tree
        - parents
      type: object
      properties:
        committer:
          additionalProperties: false
          required:
            - date
            - name
            - email
          type: object
          properties:
            date:
              title: The time of the author or committer
              type: string
              format: date-time
            name:
              type: string
              title: The name of the author or committer
            email:
              type: string
              title: The email of the author or committer
          title: The information about the author
        author:
          additionalProperties: false
          required:
            - date
            - name
            - email
          type: object
          properties:
            date:
              title: The time of the author or committer
              type: string
              format: date-time
            name:
              type: string
              title: The name of the author or committer
            email:
              type: string
              title: The email of the author or committer
          title: The information about the author
        tree:
          type: string
          title: The identifier of the tree
        sha:
          type: string
          title: The identifier of the commit
        parents:
          items:
            type: string
          type: array
          title: The identifiers of the parents of the commit
        message:
          type: string
          title: The commit message
    SumologicIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - url
      type: object
      properties:
        category:
          type: string
          title: The Category used to easy filtering (sent as X-Sumo-Category header)
        url:
          type: string
          title: The Sumologic HTTPS endpoint
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    ScriptIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - script
      type: object
      properties:
        script:
          type: string
          title: The script to run
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    HealthWebHookIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - url
      type: object
      properties:
        url:
          type: string
          title: The URL of the webhook
        type:
          type: string
          title: Integration type
        shared_key:
          type: string
          title: The JWS shared secret key
    EnterpriseDeploymentTarget:
      additionalProperties: false
      required:
        - type
        - name
        - deploy_host
        - deploy_key
        - deploy_private_key
        - enterprise_environments_mapping
        - site_urls
        - ssh_hosts
      type: object
      properties:
        name:
          type: string
          title: The name of the deployment target.
        deploy_private_key:
          type: string
          title: The private SSH key used to deploy.
        ssh_hosts:
          items:
            type: string
          type: array
          title: List of SSH Hosts.
        site_urls:
          type: object
          title: Site URLs
        enterprise_environments_mapping:
          type: object
          title: Mapping of Git clusters to Enterprise applications
        deploy_host:
          type: string
          title: The host to deploy to.
        deploy_key:
          type: string
          title: The public SSH key used to deploy.
        type:
          type: string
          title: The type of the deployment target.
    EnvironmentVariable:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - name
        - attributes
        - is_json
        - project
        - environment
        - inherited
        - is_enabled
        - is_inheritable
        - is_sensitive
      type: object
      properties:
        is_enabled:
          type: boolean
          title: The variable is enabled on this environment
        environment:
          type: string
          title: Environment name
        name:
          type: string
          title: Name
        is_json:
          type: boolean
          title: The variable is a JSON string
        is_sensitive:
          type: boolean
          title: The variable is sensitive
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Update date
          type: string
          format: date-time
        value:
          type: string
          title: Value
        project:
          type: string
          title: Project name
        is_inheritable:
          type: boolean
          title: The variable is inheritable to child environments
        inherited:
          type: boolean
          title: The variable is inherited from a parent environment
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
    Tag:
      additionalProperties: false
      required:
        - sha
        - tagger
        - message
        - object
      type: object
      properties:
        sha:
          type: string
          title: The identifier of the tag
        message:
          type: string
          title: The tag message
        object:
          additionalProperties: false
          required:
            - type
            - sha
          type: object
          properties:
            sha:
              type: string
              title: The SHA of the object pointed to
            type:
              type: string
              title: The type of object pointed to
          title: The information about the object the tag points to
        tagger:
          additionalProperties: false
          required:
            - date
            - name
            - email
          type: object
          properties:
            date:
              title: The time of the author or committer
              type: string
              format: date-time
            name:
              type: string
              title: The name of the author or committer
            email:
              type: string
              title: The email of the author or committer
          title: The information about the tagger
    GithubIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - token
        - repository
      type: object
      properties:
        build_draft_pull_requests:
          type: boolean
          title: Whether or not to build draft pull requests (requires `build_pull_requests`).
        pull_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building pull requests.
        repository:
          type: string
          title: The GitHub repository (in the form `user/repo`).
        base_url:
          type: string
          title: The base URL of the Github API endpoint.
        token:
          type: string
          title: The GitHub token.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        build_pull_requests_post_merge:
          type: boolean
          title: Whether to build pull requests post-merge (if true) or pre-merge (if false).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    RedirectRoute:
      additionalProperties: false
      required:
        - primary
        - id
        - attributes
        - type
        - redirects
        - tls
        - to
      type: object
      properties:
        tls:
          additionalProperties: false
          required:
            - strict_transport_security
            - min_version
            - client_authentication
            - client_certificate_authorities
          type: object
          properties:
            client_authentication:
              type: string
              title: The type of client authentication to request.
            min_version:
              enum:
                - TLSv1.1
                - TLSv1.0
                - TLSv1.3
                - TLSv1.2
              type: string
              title: The minimum TLS version to support.
            client_certificate_authorities:
              items:
                type: string
              type: array
              title: Certificate authorities to validate the client certificate against. If not specified, a default set of trusted CAs will be used.
            strict_transport_security:
              additionalProperties: false
              required:
                - enabled
                - include_subdomains
                - preload
              type: object
              properties:
                preload:
                  type: boolean
                  title: Whether the strict transport security policy should be preloaded in browsers.
                include_subdomains:
                  type: boolean
                  title: Whether the strict transport security policy should include all subdomains.
                enabled:
                  type: boolean
                  title: Whether strict transport security is enabled or not.
              title: Strict-Transport-Security options.
          title: TLS settings for the route.
        redirects:
          additionalProperties: false
          required:
            - expires
            - paths
          type: object
          properties:
            paths:
              additionalProperties:
                additionalProperties: false
                required:
                  - regexp
                  - to
                  - prefix
                  - append_suffix
                  - code
                  - expires
                type: object
                properties:
                  code:
                    type: integer
                    title: The redirect code to use.
                  expires:
                    type: string
                    title: The amount of time, in seconds, to cache the redirects.
                  to:
                    type: string
                    title: The URL to redirect to.
                  prefix:
                    type: boolean
                    title: Whether to redirect all the paths that start with the path.
                  append_suffix:
                    type: boolean
                    title: Whether to append the incoming suffix to the redirected URL.
                  regexp:
                    type: boolean
                    title: Whether the path is a regular expression.
              type: object
              title: The paths to redirect
            expires:
              type: string
              title: The amount of time, in seconds, to cache the redirects.
          title: The configuration of the redirects.
        primary:
          type: boolean
          title: This route is the primary route of the environment
        to:
          type: string
          title: Redirect destination
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        type:
          type: string
          title: Route type.
        id:
          type: string
          title: Route Identifier
    PagerDutyIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - routing_key
      type: object
      properties:
        type:
          type: string
          title: Integration type
        routing_key:
          type: string
          title: The PagerDuty routing key
    EnvironmentPatch:
      additionalProperties: false
      type: object
      properties:
        name:
          type: string
          title: Name
        parent:
          type: string
          title: Parent environment
        title:
          type: string
          title: Title
        restrict_robots:
          type: boolean
          title: Whether to restrict robots for this environment.
        clone_parent_on_create:
          type: boolean
          title: Clone data when creating that environment
        enable_smtp:
          type: boolean
          title: Whether to configure SMTP for this environment.
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        http_access:
          additionalProperties: false
          type: object
          properties:
            is_enabled:
              type: boolean
              title: Whether http_access control is enabled
            addresses:
              items:
                additionalProperties: false
                required:
                  - permission
                  - address
                type: object
                properties:
                  address:
                    type: string
                    title: IP address or CIDR
                  permission:
                    type: string
                    title: Permission
              type: array
              title: Address grants
            basic_auth:
              additionalProperties:
                type: string
              type: object
              title: Basic auth grants
          title: Http access permissions
        backups:
          title: The configuration for scheduled backups
          required:
            - manual_count
          additionalProperties: false
          type: object
          properties:
            manual_count:
              type: integer
              title: The number of manual backups to keep.
            schedule:
              items:
                additionalProperties: false
                required:
                  - interval
                  - count
                type: object
                properties:
                  count:
                    type: integer
                    title: The number of backups to keep under this interval.
                  interval:
                    type: string
                    title: The policy interval specification.
              type: array
              title: The backup schedule specification.
          x-stability: EXPERIMENTAL
    RefCreateInput:
      additionalProperties: false
      required:
        - ref
        - object
      type: object
      properties:
        object:
          additionalProperties: false
          required:
            - type
            - sha
          type: object
          properties:
            sha:
              type: string
              title: The SHA of the object pointed to
            type:
              type: string
              title: The type of object pointed to
          title: The object the reference points to
        ref:
          type: string
          title: The name of the reference
    DeploymentTargetCreateInput:
      oneOf:
        - $ref: '#/components/schemas/DedicatedDeploymentTargetCreateInput'
        - $ref: '#/components/schemas/EnterpriseDeploymentTargetCreateInput'
        - $ref: '#/components/schemas/FoundationDeploymentTargetCreateInput'
    CertificatePatch:
      additionalProperties: false
      type: object
      properties:
        is_invalid:
          type: boolean
          title: Whether this certificate should be skipped during provisioning
        chain:
          items:
            type: string
          type: array
          title: Certificate chain
    Ref:
      additionalProperties: false
      required:
        - ref
        - object
      type: object
      properties:
        object:
          additionalProperties: false
          required:
            - type
            - sha
          type: object
          properties:
            sha:
              type: string
              title: The SHA of the object pointed to
            type:
              type: string
              title: The type of object pointed to
          title: The object the reference points to
        ref:
          type: string
          title: The name of the reference
    EnterpriseDeploymentTargetCreateInput:
      additionalProperties: false
      required:
        - type
        - name
        - deploy_private_key
      type: object
      properties:
        name:
          type: string
          title: The name of the deployment target.
        deploy_private_key:
          type: string
          title: The private SSH key used to deploy.
        ssh_hosts:
          items:
            type: string
          type: array
          title: List of SSH Hosts.
        site_urls:
          type: object
          title: Site URLs
        enterprise_environments_mapping:
          type: object
          title: Mapping of Git clusters to Enterprise applications
        type:
          type: string
          title: The type of the deployment target.
    RoutePatch:
      oneOf:
        - $ref: '#/components/schemas/RedirectRoutePatch'
        - $ref: '#/components/schemas/UpstreamRoutePatch'
    ScriptIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - script
      type: object
      properties:
        script:
          type: string
          title: The script to run
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    BackupCreateInput:
      additionalProperties: false
      type: object
      properties:
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
    ProjectPatch:
      additionalProperties: false
      type: object
      properties:
        description:
          type: string
          title: Description
        title:
          type: string
          title: Title
        region:
          type: string
          title: Region
        default_domain:
          type: string
          title: Default domain
        timezone:
          type: string
          title: Timezone of the project
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
    SlackIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - token
        - channel
      type: object
      properties:
        token:
          type: string
          title: The Slack token to use
        type:
          type: string
          title: Integration type
        channel:
          type: string
          title: The Slack channel to post messages to
    ProjectCapabilitiesPatch:
      additionalProperties: false
      type: object
    Tree:
      additionalProperties: false
      required:
        - sha
        - tree
      type: object
      properties:
        sha:
          type: string
          title: The identifier of the tree
        tree:
          items:
            additionalProperties: false
            required:
              - path
              - mode
              - type
              - sha
            type: object
            properties:
              path:
                type: string
                title: The path of the item
              type:
                type: string
                title: The type of the item (blob or tree)
              mode:
                type: string
                title: The mode of the item
              sha:
                type: string
                title: The sha of the item
          type: array
          title: The tree items
    PagerDutyIntegration:
      additionalProperties: false
      required:
        - type
        - routing_key
      type: object
      properties:
        type:
          type: string
          title: Integration type
        routing_key:
          type: string
          title: The PagerDuty routing key
    FoundationDeploymentTargetPatch:
      additionalProperties: false
      required:
        - type
        - name
      type: object
      properties:
        hosts:
          items:
            additionalProperties: false
            required:
              - id
              - type
            type: object
            properties:
              type:
                type: string
                title: The type of the deployment to this host.
              id:
                type: string
                title: The identifier of the host.
          type: array
          title: The hosts of the deployment target.
        type:
          type: string
          title: The type of the deployment target.
        name:
          type: string
          title: The name of the deployment target.
    RedirectRoutePatch:
      additionalProperties: false
      required:
        - type
        - to
      type: object
      properties:
        tls:
          additionalProperties: false
          type: object
          properties:
            client_authentication:
              type: string
              title: The type of client authentication to request.
            min_version:
              enum:
                - TLSv1.1
                - TLSv1.0
                - TLSv1.3
                - TLSv1.2
              type: string
              title: The minimum TLS version to support.
            client_certificate_authorities:
              items:
                type: string
              type: array
              title: Certificate authorities to validate the client certificate against. If not specified, a default set of trusted CAs will be used.
            strict_transport_security:
              additionalProperties: false
              type: object
              properties:
                preload:
                  type: boolean
                  title: Whether the strict transport security policy should be preloaded in browsers.
                include_subdomains:
                  type: boolean
                  title: Whether the strict transport security policy should include all subdomains.
                enabled:
                  type: boolean
                  title: Whether strict transport security is enabled or not.
              title: Strict-Transport-Security options.
          title: TLS settings for the route.
        redirects:
          additionalProperties: false
          required:
            - paths
          type: object
          properties:
            paths:
              additionalProperties:
                additionalProperties: false
                required:
                  - to
                type: object
                properties:
                  code:
                    type: integer
                    title: The redirect code to use.
                  expires:
                    type: string
                    title: The amount of time, in seconds, to cache the redirects.
                  to:
                    type: string
                    title: The URL to redirect to.
                  prefix:
                    type: boolean
                    title: Whether to redirect all the paths that start with the path.
                  append_suffix:
                    type: boolean
                    title: Whether to append the incoming suffix to the redirected URL.
                  regexp:
                    type: boolean
                    title: Whether the path is a regular expression.
              type: object
              title: The paths to redirect
            expires:
              type: string
              title: The amount of time, in seconds, to cache the redirects.
          title: The configuration of the redirects.
        primary:
          type: boolean
          title: This route is the primary route of the environment
        to:
          type: string
          title: Redirect destination
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        type:
          type: string
          title: Route type.
        id:
          type: string
          title: Route Identifier
    Domain:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - name
        - attributes
      type: object
      properties:
        registered_name:
          type: string
          title: Claimed domain name
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Update date
          type: string
          format: date-time
        project:
          type: string
          title: Project name
        ssl:
          additionalProperties: false
          type: object
          properties:
            certificate:
              type: string
              title: The PEM-encoded certificate
            chain:
              items:
                type: string
              type: array
              title: Certificate chain
            ca:
              type: string
              title: The certificate authority declared in the certificate
            key:
              type: string
              title: The PEM-encoded private key
            expires_on:
              title: The expiration timestamp declared in the certificate
              type: string
              format: date-time
            has_certificate:
              type: boolean
              title: Domain has a valid certificate
          title: The SSL information for the domain.
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        name:
          type: string
          title: Domain name
    EnvironmentBranchInput:
      additionalProperties: false
      required:
        - title
        - name
        - clone_parent
      type: object
      properties:
        name:
          type: string
          title: Name
        clone_parent:
          type: boolean
          title: Clone data from the parent environment
        title:
          type: string
          title: Title
    DomainPatch:
      additionalProperties: false
      type: object
      properties:
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        ssl:
          additionalProperties: false
          type: object
          properties:
            chain:
              items:
                type: string
              type: array
              title: Certificate chain
            key:
              type: string
              title: The PEM-encoded private key
            certificate:
              type: string
              title: The PEM-encoded certificate
          title: The SSL information for the domain.
    ProjectCapabilities:
      additionalProperties: false
      type: object
    UpstreamRouteCreateInput:
      additionalProperties: false
      required:
        - type
        - upstream
      type: object
      properties:
        tls:
          additionalProperties: false
          type: object
          properties:
            client_authentication:
              type: string
              title: The type of client authentication to request.
            min_version:
              enum:
                - TLSv1.1
                - TLSv1.0
                - TLSv1.3
                - TLSv1.2
              type: string
              title: The minimum TLS version to support.
            client_certificate_authorities:
              items:
                type: string
              type: array
              title: Certificate authorities to validate the client certificate against. If not specified, a default set of trusted CAs will be used.
            strict_transport_security:
              additionalProperties: false
              type: object
              properties:
                preload:
                  type: boolean
                  title: Whether the strict transport security policy should be preloaded in browsers.
                include_subdomains:
                  type: boolean
                  title: Whether the strict transport security policy should include all subdomains.
                enabled:
                  type: boolean
                  title: Whether strict transport security is enabled or not.
              title: Strict-Transport-Security options.
          title: TLS settings for the route.
        redirects:
          title: The configuration of the redirects.
          required:
            - paths
          additionalProperties: false
          type: object
          properties:
            paths:
              additionalProperties:
                additionalProperties: false
                required:
                  - to
                type: object
                properties:
                  code:
                    type: integer
                    title: The redirect code to use.
                  expires:
                    type: string
                    title: The amount of time, in seconds, to cache the redirects.
                  to:
                    type: string
                    title: The URL to redirect to.
                  prefix:
                    type: boolean
                    title: Whether to redirect all the paths that start with the path.
                  append_suffix:
                    type: boolean
                    title: Whether to append the incoming suffix to the redirected URL.
                  regexp:
                    type: boolean
                    title: Whether the path is a regular expression.
              type: object
              title: The paths to redirect
            expires:
              type: string
              title: The amount of time, in seconds, to cache the redirects.
        cache:
          title: Cache configuration.
          required:
            - enabled
          additionalProperties: false
          type: object
          properties:
            default_ttl:
              type: integer
              title: The TTL to apply when the response doesn't specify one. Only applies to static files.
            cookies:
              items:
                type: string
              type: array
              title: The cookies to take into account for the cache key.
            enabled:
              type: boolean
              title: Whether the cache is enabled.
            headers:
              items:
                type: string
              type: array
              title: The headers to take into account for the cache key.
        primary:
          type: boolean
          title: This route is the primary route of the environment
        ssi:
          title: Server-Side Include configuration.
          required:
            - enabled
          additionalProperties: false
          type: object
          properties:
            enabled:
              type: boolean
              title: Whether SSI include is enabled.
        upstream:
          type: string
          title: The upstream to use for this route.
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        type:
          type: string
          title: Route type.
        id:
          type: string
          title: Route Identifier
    EnvironmentVariablePatch:
      additionalProperties: false
      type: object
      properties:
        is_enabled:
          type: boolean
          title: The variable is enabled on this environment
        name:
          type: string
          title: Name
        is_json:
          type: boolean
          title: The variable is a JSON string
        is_sensitive:
          type: boolean
          title: The variable is sensitive
        value:
          type: string
          title: Value
        is_inheritable:
          type: boolean
          title: The variable is inheritable to child environments
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
    UserKeyPatch:
      additionalProperties: false
      type: object
      properties:
        key:
          type: string
          title: Key
    BitbucketServerIntegration:
      additionalProperties: false
      required:
        - type
        - url
        - username
        - token
        - project
        - repository
        - fetch_branches
        - prune_branches
        - build_pull_requests
        - pull_requests_clone_parent_data
      type: object
      properties:
        username:
          type: string
          title: The Bitbucket Server user.
        pull_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building merge requests.
        repository:
          type: string
          title: The Bitbucket Server repository
        url:
          type: string
          title: The base URL of the Bitbucket Server installation.
        project:
          type: string
          title: The Bitbucket Server project
        token:
          type: string
          title: The Bitbucket Server personal access token.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    EnvironmentAccess:
      additionalProperties: false
      required:
        - role
      type: object
      properties:
        role:
          type: string
          title: Role
        user:
          type: string
          title: User
        email:
          type: string
          title: E-mail address
    EmailIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - recipients
      type: object
      properties:
        type:
          type: string
          title: Integration type
        from_address:
          title: The email address to use
          type: string
          nullable: true
        recipients:
          items:
            type: string
          type: array
          title: Recipients of the email
    SystemInformation:
      additionalProperties: false
      required:
        - version
        - started_at
      type: object
      properties:
        started_at:
          title: Started At
          type: string
          format: date-time
        version:
          type: string
          title: The version of this project server
    BlobCreateInput:
      additionalProperties: false
      required:
        - sha
        - size
        - encoding
        - content
      type: object
      properties:
        content:
          type: string
          title: The contents
        sha:
          type: string
          title: The identifier of the tag
        encoding:
          type: string
          title: The encoding of the contents (always base64)
        size:
          type: integer
          title: The size of the blob
    Certificate:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - certificate
        - chain
        - is_provisioned
        - is_invalid
        - domains
        - issuer
        - expires_at
      type: object
      properties:
        certificate:
          type: string
          title: The PEM-encoded certificate
        chain:
          items:
            type: string
          type: array
          title: Certificate chain
        is_invalid:
          type: boolean
          title: Whether this certificate should be skipped during provisioning
        updated_at:
          title: Update date
          type: string
          format: date-time
        expires_at:
          title: Expiration date
          type: string
          format: date-time
        is_provisioned:
          type: boolean
          title: Whether this certificate is automatically provisioned
        domains:
          items:
            type: string
          type: array
          title: The domains covered by this certificate
        created_at:
          title: Creation date
          type: string
          format: date-time
        issuer:
          items:
            additionalProperties: false
            required:
              - oid
              - alias
              - value
            type: object
            properties:
              alias:
                type: string
                title: The alias of the attribute, if known
              oid:
                type: string
                title: The OID of the attribute
              value:
                type: string
                title: The value
          type: array
          title: The issuer of the certificate
    Activity:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - type
        - parameters
        - project
        - state
        - result
        - started_at
        - completed_at
        - completion_percent
        - log
        - payload
        - description
        - text
        - expires_at
      type: object
      properties:
        completion_percent:
          type: integer
          title: Completion percentage
        log:
          deprecated: true
          type: string
          title: Log
          x-stability: DEPRECATED
        parameters:
          type: object
          title: Parameters
        text:
          type: string
          title: The description of the activity, formatted as plain text
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Update date
          type: string
          format: date-time
        environments:
          items:
            type: string
          type: array
          title: Environments
        integration:
          type: string
          title: Integration
        project:
          type: string
          title: Project
        completed_at:
          title: Completion date
          type: string
          format: date-time
        state:
          type: string
          title: State
        expires_at:
          title: The date at which the activity will expire.
          type: string
          format: date-time
        result:
          type: string
          title: Result
        started_at:
          title: Start date
          type: string
          format: date-time
        type:
          type: string
          title: Type
        payload:
          type: object
          title: Payload
        description:
          type: string
          title: The description of the activity, formatted with HTML
    Environment:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - name
        - machine_name
        - title
        - attributes
        - parent
        - clone_parent_on_create
        - deployment_target
        - is_pr
        - status
        - http_access
        - enable_smtp
        - restrict_robots
        - edge_hostname
        - last_active_at
        - last_backup_at
        - project
        - is_main
        - is_dirty
        - has_code
        - head_commit
      type: object
      properties:
        machine_name:
          type: string
          title: Machine name
        updated_at:
          title: Update date
          type: string
          format: date-time
        is_dirty:
          type: boolean
          title: Is there any pending activity on this environment
        has_code:
          type: boolean
          title: Does this environment have code
        is_pr:
          type: boolean
          title: Is this environment a pull request / merge request
        backups:
          title: The configuration for scheduled backups
          required:
            - manual_count
            - schedule
          additionalProperties: false
          type: object
          properties:
            manual_count:
              type: integer
              title: The number of manual backups to keep.
            schedule:
              items:
                additionalProperties: false
                required:
                  - interval
                  - count
                type: object
                properties:
                  count:
                    type: integer
                    title: The number of backups to keep under this interval.
                  interval:
                    type: string
                    title: The policy interval specification.
              type: array
              title: The backup schedule specification.
          x-stability: EXPERIMENTAL
        last_backup_at:
          title: Last backup date
          type: string
          format: date-time
        title:
          type: string
          title: Title
        enable_smtp:
          type: boolean
          title: Whether to configure SMTP for this environment.
        status:
          type: string
          title: Status
        parent:
          type: string
          title: Parent environment
        head_commit:
          type: string
          title: The SHA of the head commit for this environment
        restrict_robots:
          type: boolean
          title: Whether to restrict robots for this environment.
        http_access:
          additionalProperties: false
          required:
            - is_enabled
            - addresses
            - basic_auth
          type: object
          properties:
            is_enabled:
              type: boolean
              title: Whether http_access control is enabled
            addresses:
              items:
                additionalProperties: false
                required:
                  - permission
                  - address
                type: object
                properties:
                  address:
                    type: string
                    title: IP address or CIDR
                  permission:
                    type: string
                    title: Permission
              type: array
              title: Address grants
            basic_auth:
              additionalProperties:
                type: string
              type: object
              title: Basic auth grants
          title: Http access permissions
        last_active_at:
          title: Last activity date
          type: string
          format: date-time
        name:
          type: string
          title: Name
        created_at:
          title: Creation date
          type: string
          format: date-time
        clone_parent_on_create:
          type: boolean
          title: Clone data when creating that environment
        project:
          type: string
          title: Project
        edge_hostname:
          type: string
          title: The hostname to use as the CNAME.
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        deployment_target:
          type: string
          title: Deployment target of the environment
        is_main:
          type: boolean
          title: Is this environment the main environment
    SystemInformationPatch:
      additionalProperties: false
      type: object
    EmailIntegration:
      additionalProperties: false
      required:
        - type
        - from_address
        - recipients
      type: object
      properties:
        type:
          type: string
          title: Integration type
        from_address:
          title: The email address to use
          type: string
          nullable: true
        recipients:
          items:
            type: string
          type: array
          title: Recipients of the email
    ProjectVariablePatch:
      additionalProperties: false
      type: object
      properties:
        name:
          type: string
          title: Name
        is_json:
          type: boolean
          title: The variable is a JSON string
        is_sensitive:
          type: boolean
          title: The variable is sensitive
        value:
          type: string
          title: Value
        visible_build:
          type: boolean
          title: The variable is visible during build
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        visible_runtime:
          type: boolean
          title: The variable is visible at runtime
    BitbucketIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - repository
      type: object
      properties:
        app_credentials:
          additionalProperties: false
          required:
            - key
            - secret
          type: object
          properties:
            secret:
              type: string
              title: The OAuth consumer secret.
            key:
              type: string
              title: The OAuth consumer key.
          title: The OAuth2 consumer information (optional).
        repository:
          type: string
          title: The Bitbucket repository (in the form `user/repo`).
        resync_pull_requests:
          type: boolean
          title: Whether or not pull request environment data should be re-synced on every build.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        addon_credentials:
          additionalProperties: false
          required:
            - addon_key
            - client_key
            - shared_secret
          type: object
          properties:
            client_key:
              type: string
              title: The client key (public identifier).
            shared_secret:
              type: string
              title: The secret of the client.
            addon_key:
              type: string
              title: The addon key (public identifier).
          title: The addon credential information (optional).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    HealthWebHookIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - url
      type: object
      properties:
        url:
          type: string
          title: The URL of the webhook
        type:
          type: string
          title: Integration type
        shared_key:
          type: string
          title: The JWS shared secret key
    BitbucketServerIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - url
        - username
        - token
        - project
        - repository
      type: object
      properties:
        username:
          type: string
          title: The Bitbucket Server user.
        pull_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building merge requests.
        repository:
          type: string
          title: The Bitbucket Server repository
        url:
          type: string
          title: The base URL of the Bitbucket Server installation.
        project:
          type: string
          title: The Bitbucket Server project
        token:
          type: string
          title: The Bitbucket Server personal access token.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    DeploymentTarget:
      oneOf:
        - $ref: '#/components/schemas/DedicatedDeploymentTarget'
        - $ref: '#/components/schemas/EnterpriseDeploymentTarget'
        - $ref: '#/components/schemas/FoundationDeploymentTarget'
    HipChatIntegration:
      additionalProperties: false
      required:
        - type
        - events
        - environments
        - excluded_environments
        - states
        - token
        - room
      type: object
      properties:
        room:
          type: string
          title: The room ID or name to notify of the activities
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        token:
          type: string
          title: The HipChat token
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    GithubIntegration:
      additionalProperties: false
      required:
        - type
        - token
        - base_url
        - repository
        - fetch_branches
        - prune_branches
        - build_pull_requests
        - build_draft_pull_requests
        - build_pull_requests_post_merge
        - pull_requests_clone_parent_data
      type: object
      properties:
        build_draft_pull_requests:
          type: boolean
          title: Whether or not to build draft pull requests (requires `build_pull_requests`).
        pull_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building pull requests.
        repository:
          type: string
          title: The GitHub repository (in the form `user/repo`).
        base_url:
          type: string
          title: The base URL of the Github API endpoint.
        token:
          type: string
          title: The GitHub token.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        build_pull_requests_post_merge:
          type: boolean
          title: Whether to build pull requests post-merge (if true) or pre-merge (if false).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    TagCreateInput:
      additionalProperties: false
      required:
        - sha
        - tagger
        - message
        - object
      type: object
      properties:
        sha:
          type: string
          title: The identifier of the tag
        message:
          type: string
          title: The tag message
        object:
          additionalProperties: false
          required:
            - type
            - sha
          type: object
          properties:
            sha:
              type: string
              title: The SHA of the object pointed to
            type:
              type: string
              title: The type of object pointed to
          title: The information about the object the tag points to
        tagger:
          additionalProperties: false
          required:
            - date
            - name
            - email
          type: object
          properties:
            date:
              title: The time of the author or committer
              type: string
              format: date-time
            name:
              type: string
              title: The name of the author or committer
            email:
              type: string
              title: The email of the author or committer
          title: The information about the tagger
    EnvironmentAccessPatch:
      additionalProperties: false
      type: object
      properties:
        role:
          type: string
          title: Role
    UserKey:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - name
        - key
      type: object
      properties:
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Update date
          type: string
          format: date-time
        key:
          type: string
          title: Key
        name:
          type: string
          title: Name
    GitLabIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - token
        - project
      type: object
      properties:
        build_wip_merge_requests:
          type: boolean
          title: Whether or not to build work in progress merge requests (requires `build_merge_requests`).
        build_merge_requests:
          type: boolean
          title: Whether or not to build merge requests.
        merge_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building merge requests.
        base_url:
          type: string
          title: The base URL of the GitLab installation.
        project:
          type: string
          title: The GitLab project (in the form `namespace/repo`).
        token:
          type: string
          title: The GitLab private token.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    EnvironmentSourceOperationInput:
      additionalProperties: false
      required:
        - operation
        - variables
      type: object
      properties:
        operation:
          type: string
          title: The name of the operation to execute
        variables:
          additionalProperties:
            additionalProperties: {}
            type: object
          type: object
          title: The variables of the application.
    EnvironmentCreateInput:
      additionalProperties: false
      required:
        - name
        - title
        - http_access
        - enable_smtp
      type: object
      properties:
        name:
          type: string
          title: Name
        parent:
          type: string
          title: Parent environment
        title:
          type: string
          title: Title
        restrict_robots:
          type: boolean
          title: Whether to restrict robots for this environment.
        clone_parent_on_create:
          type: boolean
          title: Clone data when creating that environment
        enable_smtp:
          type: boolean
          title: Whether to configure SMTP for this environment.
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        http_access:
          additionalProperties: false
          type: object
          properties:
            is_enabled:
              type: boolean
              title: Whether http_access control is enabled
            addresses:
              items:
                additionalProperties: false
                required:
                  - permission
                  - address
                type: object
                properties:
                  address:
                    type: string
                    title: IP address or CIDR
                  permission:
                    type: string
                    title: Permission
              type: array
              title: Address grants
            basic_auth:
              additionalProperties:
                type: string
              type: object
              title: Basic auth grants
          title: Http access permissions
        backups:
          title: The configuration for scheduled backups
          required:
            - manual_count
          additionalProperties: false
          type: object
          properties:
            manual_count:
              type: integer
              title: The number of manual backups to keep.
            schedule:
              items:
                additionalProperties: false
                required:
                  - interval
                  - count
                type: object
                properties:
                  count:
                    type: integer
                    title: The number of backups to keep under this interval.
                  interval:
                    type: string
                    title: The policy interval specification.
              type: array
              title: The backup schedule specification.
          x-stability: EXPERIMENTAL
    PagerDutyIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - routing_key
      type: object
      properties:
        type:
          type: string
          title: Integration type
        routing_key:
          type: string
          title: The PagerDuty routing key
    IntegrationPatch:
      oneOf:
        - $ref: '#/components/schemas/BitbucketIntegrationPatch'
        - $ref: '#/components/schemas/BitbucketServerIntegrationPatch'
        - $ref: '#/components/schemas/GithubIntegrationPatch'
        - $ref: '#/components/schemas/GitLabIntegrationPatch'
        - $ref: '#/components/schemas/EmailIntegrationPatch'
        - $ref: '#/components/schemas/PagerDutyIntegrationPatch'
        - $ref: '#/components/schemas/SlackIntegrationPatch'
        - $ref: '#/components/schemas/HealthWebHookIntegrationPatch'
        - $ref: '#/components/schemas/HipChatIntegrationPatch'
        - $ref: '#/components/schemas/NewRelicIntegrationPatch'
        - $ref: '#/components/schemas/ScriptIntegrationPatch'
        - $ref: '#/components/schemas/SumologicIntegrationPatch'
        - $ref: '#/components/schemas/WebHookIntegrationPatch'
    UpstreamRoute:
      additionalProperties: false
      required:
        - primary
        - id
        - attributes
        - type
        - redirects
        - tls
        - cache
        - ssi
        - upstream
      type: object
      properties:
        tls:
          additionalProperties: false
          required:
            - strict_transport_security
            - min_version
            - client_authentication
            - client_certificate_authorities
          type: object
          properties:
            client_authentication:
              type: string
              title: The type of client authentication to request.
            min_version:
              enum:
                - TLSv1.1
                - TLSv1.0
                - TLSv1.3
                - TLSv1.2
              type: string
              title: The minimum TLS version to support.
            client_certificate_authorities:
              items:
                type: string
              type: array
              title: Certificate authorities to validate the client certificate against. If not specified, a default set of trusted CAs will be used.
            strict_transport_security:
              additionalProperties: false
              required:
                - enabled
                - include_subdomains
                - preload
              type: object
              properties:
                preload:
                  type: boolean
                  title: Whether the strict transport security policy should be preloaded in browsers.
                include_subdomains:
                  type: boolean
                  title: Whether the strict transport security policy should include all subdomains.
                enabled:
                  type: boolean
                  title: Whether strict transport security is enabled or not.
              title: Strict-Transport-Security options.
          title: TLS settings for the route.
        redirects:
          additionalProperties: false
          required:
            - expires
            - paths
          type: object
          properties:
            paths:
              additionalProperties:
                additionalProperties: false
                required:
                  - regexp
                  - to
                  - prefix
                  - append_suffix
                  - code
                  - expires
                type: object
                properties:
                  code:
                    type: integer
                    title: The redirect code to use.
                  expires:
                    type: string
                    title: The amount of time, in seconds, to cache the redirects.
                  to:
                    type: string
                    title: The URL to redirect to.
                  prefix:
                    type: boolean
                    title: Whether to redirect all the paths that start with the path.
                  append_suffix:
                    type: boolean
                    title: Whether to append the incoming suffix to the redirected URL.
                  regexp:
                    type: boolean
                    title: Whether the path is a regular expression.
              type: object
              title: The paths to redirect
            expires:
              type: string
              title: The amount of time, in seconds, to cache the redirects.
          title: The configuration of the redirects.
        cache:
          additionalProperties: false
          required:
            - enabled
            - default_ttl
            - cookies
            - headers
          type: object
          properties:
            default_ttl:
              type: integer
              title: The TTL to apply when the response doesn't specify one. Only applies to static files.
            cookies:
              items:
                type: string
              type: array
              title: The cookies to take into account for the cache key.
            enabled:
              type: boolean
              title: Whether the cache is enabled.
            headers:
              items:
                type: string
              type: array
              title: The headers to take into account for the cache key.
          title: Cache configuration.
        primary:
          type: boolean
          title: This route is the primary route of the environment
        ssi:
          additionalProperties: false
          required:
            - enabled
          type: object
          properties:
            enabled:
              type: boolean
              title: Whether SSI include is enabled.
          title: Server-Side Include configuration.
        upstream:
          type: string
          title: The upstream to use for this route.
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        type:
          type: string
          title: Route type.
        id:
          type: string
          title: Route Identifier
    Backup:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - id
        - attributes
        - status
        - expires_at
        - index
        - commit_id
        - environment
        - restorable
      type: object
      properties:
        status:
          type: string
          title: The status of the backup
        index:
          type: integer
          title: The index of this automated backup
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Update date
          type: string
          format: date-time
        expires_at:
          title: Expiration date of the backup
          type: string
          format: date-time
        restorable:
          type: boolean
          title: Whether the backup is restorable
        environment:
          type: string
          title: The environment the backup belongs to
        commit_id:
          type: string
          title: The ID of the code commit attached to the backup
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        id:
          type: string
          title: The backup name/id (used for purging)
    UserKeyCreateInput:
      additionalProperties: false
      required:
        - key
      type: object
      properties:
        key:
          type: string
          title: Key
    ProjectVariable:
      additionalProperties: false
      required:
        - created_at
        - updated_at
        - name
        - attributes
        - is_json
        - is_sensitive
        - visible_build
        - visible_runtime
      type: object
      properties:
        name:
          type: string
          title: Name
        is_json:
          type: boolean
          title: The variable is a JSON string
        is_sensitive:
          type: boolean
          title: The variable is sensitive
        created_at:
          title: Creation date
          type: string
          format: date-time
        updated_at:
          title: Update date
          type: string
          format: date-time
        value:
          type: string
          title: Value
        visible_build:
          type: boolean
          title: The variable is visible during build
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        visible_runtime:
          type: boolean
          title: The variable is visible at runtime
    EmailIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - recipients
      type: object
      properties:
        type:
          type: string
          title: Integration type
        from_address:
          title: The email address to use
          type: string
          nullable: true
        recipients:
          items:
            type: string
          type: array
          title: Recipients of the email
    TreeCreateInput:
      additionalProperties: false
      required:
        - sha
        - tree
      type: object
      properties:
        sha:
          type: string
          title: The identifier of the tree
        tree:
          items:
            additionalProperties: false
            required:
              - path
              - mode
              - type
              - sha
            type: object
            properties:
              path:
                type: string
                title: The path of the item
              type:
                type: string
                title: The type of the item (blob or tree)
              mode:
                type: string
                title: The mode of the item
              sha:
                type: string
                title: The sha of the item
          type: array
          title: The tree items
    NewRelicIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - url
        - license_key
      type: object
      properties:
        url:
          type: string
          title: The NewRelic Logs endpoint
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        license_key:
          type: string
          title: The NewRelic Logs License Key
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    FoundationDeploymentTarget:
      additionalProperties: false
      required:
        - type
        - name
        - hosts
        - storage_type
      type: object
      properties:
        hosts:
          items:
            additionalProperties: false
            required:
              - id
              - type
            type: object
            properties:
              type:
                type: string
                title: The type of the deployment to this host.
              id:
                type: string
                title: The identifier of the host.
          type: array
          title: The hosts of the deployment target.
        storage_type:
          type: string
          title: The storage type.
        type:
          type: string
          title: The type of the deployment target.
        name:
          type: string
          title: The name of the deployment target.
    DedicatedDeploymentTargetCreateInput:
      additionalProperties: false
      required:
        - type
        - name
      type: object
      properties:
        type:
          type: string
          title: The type of the deployment target.
        name:
          type: string
          title: The name of the deployment target.
    GithubIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - token
        - repository
      type: object
      properties:
        build_draft_pull_requests:
          type: boolean
          title: Whether or not to build draft pull requests (requires `build_pull_requests`).
        pull_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building pull requests.
        repository:
          type: string
          title: The GitHub repository (in the form `user/repo`).
        base_url:
          type: string
          title: The base URL of the Github API endpoint.
        token:
          type: string
          title: The GitHub token.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        build_pull_requests_post_merge:
          type: boolean
          title: Whether to build pull requests post-merge (if true) or pre-merge (if false).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    Integration:
      oneOf:
        - $ref: '#/components/schemas/BitbucketIntegration'
        - $ref: '#/components/schemas/BitbucketServerIntegration'
        - $ref: '#/components/schemas/GithubIntegration'
        - $ref: '#/components/schemas/GitLabIntegration'
        - $ref: '#/components/schemas/EmailIntegration'
        - $ref: '#/components/schemas/PagerDutyIntegration'
        - $ref: '#/components/schemas/SlackIntegration'
        - $ref: '#/components/schemas/HealthWebHookIntegration'
        - $ref: '#/components/schemas/HipChatIntegration'
        - $ref: '#/components/schemas/NewRelicIntegration'
        - $ref: '#/components/schemas/ScriptIntegration'
        - $ref: '#/components/schemas/SumologicIntegration'
        - $ref: '#/components/schemas/WebHookIntegration'
    EnvironmentTopology:
      type: object
    NewRelicIntegration:
      additionalProperties: false
      required:
        - type
        - events
        - environments
        - excluded_environments
        - states
        - url
        - license_key
      type: object
      properties:
        url:
          type: string
          title: The NewRelic Logs endpoint
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        license_key:
          type: string
          title: The NewRelic Logs License Key
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    Blob:
      additionalProperties: false
      required:
        - sha
        - size
        - encoding
        - content
      type: object
      properties:
        content:
          type: string
          title: The contents
        sha:
          type: string
          title: The identifier of the tag
        encoding:
          type: string
          title: The encoding of the contents (always base64)
        size:
          type: integer
          title: The size of the blob
    GitLabIntegration:
      additionalProperties: false
      required:
        - type
        - token
        - base_url
        - project
        - fetch_branches
        - prune_branches
        - build_merge_requests
        - build_wip_merge_requests
        - merge_requests_clone_parent_data
      type: object
      properties:
        build_wip_merge_requests:
          type: boolean
          title: Whether or not to build work in progress merge requests (requires `build_merge_requests`).
        build_merge_requests:
          type: boolean
          title: Whether or not to build merge requests.
        merge_requests_clone_parent_data:
          type: boolean
          title: Whether or not to clone parent data when building merge requests.
        base_url:
          type: string
          title: The base URL of the GitLab installation.
        project:
          type: string
          title: The GitLab project (in the form `namespace/repo`).
        token:
          type: string
          title: The GitLab private token.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    HealthWebHookIntegration:
      additionalProperties: false
      required:
        - type
        - shared_key
        - url
      type: object
      properties:
        url:
          type: string
          title: The URL of the webhook
        type:
          type: string
          title: Integration type
        shared_key:
          type: string
          title: The JWS shared secret key
    EnvironmentRestoreInput:
      additionalProperties: false
      required:
        - environment_name
        - branch_from
        - restore_code
      type: object
      properties:
        environment_name:
          type: string
          title: Environment name
        branch_from:
          type: string
          title: Branch from
        restore_code:
          type: boolean
          title: Whether we should restore the code or only the data
    WebHookIntegration:
      additionalProperties: false
      required:
        - type
        - events
        - environments
        - excluded_environments
        - states
        - shared_key
        - url
      type: object
      properties:
        url:
          type: string
          title: The URL of the webhook
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        shared_key:
          type: string
          title: The JWS shared secret key
    FoundationDeploymentTargetCreateInput:
      additionalProperties: false
      required:
        - type
        - name
      type: object
      properties:
        hosts:
          items:
            additionalProperties: false
            required:
              - id
              - type
            type: object
            properties:
              type:
                type: string
                title: The type of the deployment to this host.
              id:
                type: string
                title: The identifier of the host.
          type: array
          title: The hosts of the deployment target.
        type:
          type: string
          title: The type of the deployment target.
        name:
          type: string
          title: The name of the deployment target.
    UpstreamRoutePatch:
      additionalProperties: false
      required:
        - type
        - upstream
      type: object
      properties:
        tls:
          additionalProperties: false
          type: object
          properties:
            client_authentication:
              type: string
              title: The type of client authentication to request.
            min_version:
              enum:
                - TLSv1.1
                - TLSv1.0
                - TLSv1.3
                - TLSv1.2
              type: string
              title: The minimum TLS version to support.
            client_certificate_authorities:
              items:
                type: string
              type: array
              title: Certificate authorities to validate the client certificate against. If not specified, a default set of trusted CAs will be used.
            strict_transport_security:
              additionalProperties: false
              type: object
              properties:
                preload:
                  type: boolean
                  title: Whether the strict transport security policy should be preloaded in browsers.
                include_subdomains:
                  type: boolean
                  title: Whether the strict transport security policy should include all subdomains.
                enabled:
                  type: boolean
                  title: Whether strict transport security is enabled or not.
              title: Strict-Transport-Security options.
          title: TLS settings for the route.
        redirects:
          additionalProperties: false
          required:
            - paths
          type: object
          properties:
            paths:
              additionalProperties:
                additionalProperties: false
                required:
                  - to
                type: object
                properties:
                  code:
                    type: integer
                    title: The redirect code to use.
                  expires:
                    type: string
                    title: The amount of time, in seconds, to cache the redirects.
                  to:
                    type: string
                    title: The URL to redirect to.
                  prefix:
                    type: boolean
                    title: Whether to redirect all the paths that start with the path.
                  append_suffix:
                    type: boolean
                    title: Whether to append the incoming suffix to the redirected URL.
                  regexp:
                    type: boolean
                    title: Whether the path is a regular expression.
              type: object
              title: The paths to redirect
            expires:
              type: string
              title: The amount of time, in seconds, to cache the redirects.
          title: The configuration of the redirects.
        cache:
          additionalProperties: false
          required:
            - enabled
          type: object
          properties:
            default_ttl:
              type: integer
              title: The TTL to apply when the response doesn't specify one. Only applies to static files.
            cookies:
              items:
                type: string
              type: array
              title: The cookies to take into account for the cache key.
            enabled:
              type: boolean
              title: Whether the cache is enabled.
            headers:
              items:
                type: string
              type: array
              title: The headers to take into account for the cache key.
          title: Cache configuration.
        primary:
          type: boolean
          title: This route is the primary route of the environment
        ssi:
          additionalProperties: false
          required:
            - enabled
          type: object
          properties:
            enabled:
              type: boolean
              title: Whether SSI include is enabled.
          title: Server-Side Include configuration.
        upstream:
          type: string
          title: The upstream to use for this route.
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        type:
          type: string
          title: Route type.
        id:
          type: string
          title: Route Identifier
    Mapping:
      additionalProperties: false
      type: object
    NewRelicIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - url
        - license_key
      type: object
      properties:
        url:
          type: string
          title: The NewRelic Logs endpoint
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        license_key:
          type: string
          title: The NewRelic Logs License Key
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
    EnterpriseDeploymentTargetPatch:
      additionalProperties: false
      required:
        - type
        - name
        - deploy_private_key
      type: object
      properties:
        name:
          type: string
          title: The name of the deployment target.
        deploy_private_key:
          type: string
          title: The private SSH key used to deploy.
        ssh_hosts:
          items:
            type: string
          type: array
          title: List of SSH Hosts.
        site_urls:
          type: object
          title: Site URLs
        enterprise_environments_mapping:
          type: object
          title: Mapping of Git clusters to Enterprise applications
        type:
          type: string
          title: The type of the deployment target.
    Deployment:
      additionalProperties: false
      required:
        - cluster_name
        - project_info
        - environment_info
        - deployment_target
        - vpn
        - http_access
        - enable_smtp
        - restrict_robots
        - variables
        - access
        - subscription
        - services
        - routes
        - webapps
        - workers
      type: object
      properties:
        access:
          items:
            additionalProperties: false
            required:
              - entity_id
              - role
            type: object
            properties:
              entity_id:
                type: string
                title: Entity ID
              role:
                type: string
                title: Role
          type: array
          title: Access control definition for this enviroment
        workers:
          additionalProperties:
            additionalProperties: false
            required:
              - resources
              - size
              - disk
              - access
              - relationships
              - mounts
              - timezone
              - variables
              - firewall
              - name
              - type
              - runtime
              - preflight
              - tree_id
              - slug_id
              - app_dir
              - worker
            type: object
            properties:
              relationships:
                additionalProperties:
                  type: string
                type: object
                title: The relationships of the application to defined services.
              runtime:
                type: object
                title: Runtime-specific configuration.
              name:
                type: string
                title: The name of the application. Must be unique within a project.
              app_dir:
                type: string
                title: The path of the application in the container
              firewall:
                nullable: true
                title: Firewall
                required:
                  - outbound
                additionalProperties: false
                type: object
                properties:
                  outbound:
                    items:
                      additionalProperties: false
                      required:
                        - protocol
                        - ips
                        - ports
                      type: object
                      properties:
                        ips:
                          items:
                            type: string
                          type: array
                          title: The IP range in CIDR notation to apply the restriction on.
                        protocol:
                          type: string
                          title: The IP protocol to apply the restriction on.
                        ports:
                          items:
                            type: integer
                          type: array
                          title: The port to apply the restriction on.
                    type: array
                    title: Outbound firewall restrictions
              slug_id:
                type: string
                title: The identifier of the built artifact of the application
              variables:
                additionalProperties:
                  additionalProperties: {}
                  type: object
                type: object
                title: Variables provide environment-sensitive information to control how your application behaves.  To set a Unix environment variable, specify a key of `env:`, and then each sub-item of that is a key/value pair that will be injected into the environment.
              worker:
                additionalProperties: false
                required:
                  - commands
                type: object
                properties:
                  commands:
                    additionalProperties: false
                    required:
                      - start
                    type: object
                    properties:
                      start:
                        type: string
                        title: The command used to start the application.  It will be restarted if it terminates. Do not use on PHP unless using a custom persistent process like React PHP.
                    title: The commands to manage the worker.
                title: Configuration of a worker container instance.
              access:
                additionalProperties:
                  type: string
                type: object
                title: Access information, a mapping between access type and roles.
              preflight:
                additionalProperties: false
                required:
                  - enabled
                  - ignored_rules
                type: object
                properties:
                  enabled:
                    type: boolean
                    title: Whether the preflight security blocks are enabled.
                  ignored_rules:
                    items:
                      type: string
                    type: array
                    title: Specific rules to ignore during preflight security checks. See the documentation for options.
                title: Configuration for pre-flight checks.
              tree_id:
                type: string
                title: The identifier of the source tree of the application
              mounts:
                additionalProperties:
                  additionalProperties: false
                  required:
                    - source
                    - source_path
                  type: object
                  properties:
                    source:
                      type: string
                      title: The type of mount that will provide the data.
                    source_path:
                      type: string
                      title: The path to be mounted, relative to the root directory of the volume that's being mounted from.
                    service:
                      type: string
                      title: The name of the service that the volume will be mounted from. Must be a service in `services.yaml` of type `network-storage`.
                type: object
                title: Filesystem mounts of this application.  If not specified the application will have no writeable disk space.
              timezone:
                type: string
                title: The timezone of the application.  This primarily affects the timezone in which cron tasks will run.  It will not affect the application itself. Defaults to UTC if not specified.
              disk:
                type: integer
                title: The writeable disk size to reserve on this application container.
              type:
                type: string
                title: The base runtime (language) and version to use for this application.
              resources:
                nullable: true
                title: Resources
                required:
                  - base_memory
                  - memory_ratio
                additionalProperties: false
                type: object
                properties:
                  base_memory:
                    type: integer
                    title: The base memory for the container
                  memory_ratio:
                    type: integer
                    title: The amount of memory to allocate per units of CPU
              size:
                type: string
                title: The container size for this application in production. Leave blank to allow it to be set dynamically.
          type: object
          title: Workers
        project_info:
          additionalProperties: false
          required:
            - name
          type: object
          properties:
            name:
              type: string
              title: The project machine name
          title: Project Info
        environment_info:
          additionalProperties: false
          required:
            - name
            - is_main
            - is_production
            - reference
          type: object
          properties:
            is_production:
              type: boolean
              title: Is this environment a production environment
            name:
              type: string
              title: The machine name of the environment
            reference:
              type: string
              title: The reference in Git for this environment
            is_main:
              type: boolean
              title: Is this environment the main environment
          title: Environment Info
        webapps:
          additionalProperties:
            additionalProperties: false
            required:
              - resources
              - size
              - disk
              - access
              - relationships
              - mounts
              - timezone
              - variables
              - firewall
              - name
              - type
              - runtime
              - preflight
              - tree_id
              - slug_id
              - app_dir
              - web
              - hooks
              - crons
            type: object
            properties:
              relationships:
                additionalProperties:
                  type: string
                type: object
                title: The relationships of the application to defined services.
              web:
                additionalProperties: false
                required:
                  - locations
                  - move_to_root
                type: object
                properties:
                  passthru:
                    type: string
                    title: The URL to use as a passthru if a file doesn't match the whitelist.
                  commands:
                    additionalProperties: false
                    required:
                      - start
                    type: object
                    properties:
                      start:
                        type: string
                        title: The command used to start the application.  It will be restarted if it terminates. Do not use on PHP unless using a custom persistent process like React PHP.
                    title: Commands to manage the application's lifecycle.
                  index_files:
                    items:
                      type: string
                    type: array
                    title: Files to look for to serve directories.
                  move_to_root:
                    type: boolean
                    title: Whether to move the whole root of the app to the document root.
                  whitelist:
                    items:
                      type: string
                    type: array
                    title: Whitelisted entries.
                  expires:
                    type: string
                    title: Amount of time to cache static assets.
                  locations:
                    additionalProperties:
                      additionalProperties: false
                      required:
                        - root
                        - expires
                        - passthru
                        - scripts
                        - allow
                        - headers
                        - rules
                      type: object
                      properties:
                        passthru:
                          type: string
                          title: Whether to forward disallowed and missing resources from this location to the application. On PHP, set to the PHP front controller script, as a URL fragment. Otherwise set to `true`/`false`.
                        index:
                          items:
                            type: string
                          type: array
                          title: Files to look for to serve directories.
                        rules:
                          additionalProperties:
                            additionalProperties: false
                            type: object
                            properties:
                              passthru:
                                type: string
                                title: Whether to forward disallowed and missing resources from this location to the application. On PHP, set to the PHP front controller script, as a URL fragment. Otherwise set to `true`/`false`.
                              headers:
                                additionalProperties:
                                  type: string
                                type: object
                                title: A set of header fields set to the HTTP response. Replaces headers set on the location block.
                              expires:
                                type: string
                                title: Amount of time to cache static assets.
                              allow:
                                type: boolean
                                title: Whether to allow access to this location by default.
                              scripts:
                                type: boolean
                                title: Whether to execute scripts in this location (for script based runtimes).
                          type: object
                          title: Specific overrides.
                        expires:
                          type: string
                          title: Amount of time to cache static assets.
                        headers:
                          additionalProperties:
                            type: string
                          type: object
                          title: A set of header fields set to the HTTP response. Applies only to static files, not responses from the application.
                        allow:
                          type: boolean
                          title: Whether to allow access to this location by default.
                        scripts:
                          type: boolean
                          title: Whether to execute scripts in this location (for script based runtimes).
                        root:
                          type: string
                          title: The folder from which to serve static assets for this location relative to the application root.
                        request_buffering:
                          additionalProperties: false
                          required:
                            - enabled
                            - max_request_size
                          type: object
                          properties:
                            max_request_size:
                              type: string
                              title: The maximum size request that can be buffered. Supports K, M, and G suffixes.
                            enabled:
                              type: boolean
                              title: Enable request buffering.
                          title: Configuration for supporting request buffering.
                    type: object
                    title: The specification of the web locations served by this application.
                  blacklist:
                    items:
                      type: string
                    type: array
                    title: Blacklisted entries.
                  upstream:
                    additionalProperties: false
                    required:
                      - socket_family
                      - protocol
                    type: object
                    properties:
                      protocol:
                        type: string
                        title: Protocol
                      socket_family:
                        type: string
                        title: If `tcp`, check the PORT environment variable on application startup. If `unix`, check SOCKET.
                    title: Configuration on how the web server communicates with the application.
                  document_root:
                    type: string
                    title: The document root of this application, relative to its root.
                title: Configuration for accessing this application via HTTP.
              runtime:
                type: object
                title: Runtime-specific configuration.
              name:
                type: string
                title: The name of the application. Must be unique within a project.
              app_dir:
                type: string
                title: The path of the application in the container
              firewall:
                nullable: true
                title: Firewall
                required:
                  - outbound
                additionalProperties: false
                type: object
                properties:
                  outbound:
                    items:
                      additionalProperties: false
                      required:
                        - protocol
                        - ips
                        - ports
                      type: object
                      properties:
                        ips:
                          items:
                            type: string
                          type: array
                          title: The IP range in CIDR notation to apply the restriction on.
                        protocol:
                          type: string
                          title: The IP protocol to apply the restriction on.
                        ports:
                          items:
                            type: integer
                          type: array
                          title: The port to apply the restriction on.
                    type: array
                    title: Outbound firewall restrictions
              slug_id:
                type: string
                title: The identifier of the built artifact of the application
              variables:
                additionalProperties:
                  additionalProperties: {}
                  type: object
                type: object
                title: Variables provide environment-sensitive information to control how your application behaves.  To set a Unix environment variable, specify a key of `env:`, and then each sub-item of that is a key/value pair that will be injected into the environment.
              access:
                additionalProperties:
                  type: string
                type: object
                title: Access information, a mapping between access type and roles.
              preflight:
                additionalProperties: false
                required:
                  - enabled
                  - ignored_rules
                type: object
                properties:
                  enabled:
                    type: boolean
                    title: Whether the preflight security blocks are enabled.
                  ignored_rules:
                    items:
                      type: string
                    type: array
                    title: Specific rules to ignore during preflight security checks. See the documentation for options.
                title: Configuration for pre-flight checks.
              tree_id:
                type: string
                title: The identifier of the source tree of the application
              mounts:
                additionalProperties:
                  additionalProperties: false
                  required:
                    - source
                    - source_path
                  type: object
                  properties:
                    source:
                      type: string
                      title: The type of mount that will provide the data.
                    source_path:
                      type: string
                      title: The path to be mounted, relative to the root directory of the volume that's being mounted from.
                    service:
                      type: string
                      title: The name of the service that the volume will be mounted from. Must be a service in `services.yaml` of type `network-storage`.
                type: object
                title: Filesystem mounts of this application.  If not specified the application will have no writeable disk space.
              timezone:
                type: string
                title: The timezone of the application.  This primarily affects the timezone in which cron tasks will run.  It will not affect the application itself. Defaults to UTC if not specified.
              hooks:
                additionalProperties: false
                required:
                  - build
                  - deploy
                  - post_deploy
                type: object
                properties:
                  post_deploy:
                    type: string
                    title: Hook executed after an environment is fully deployed.
                  build:
                    type: string
                    title: Hook executed after the build process.
                  deploy:
                    type: string
                    title: Hook executed after the deployment of new code.
                title: Hooks executed at various point in the lifecycle of the application.
              disk:
                type: integer
                title: The writeable disk size to reserve on this application container.
              type:
                type: string
                title: The base runtime (language) and version to use for this application.
              crons:
                additionalProperties:
                  additionalProperties: false
                  required:
                    - spec
                    - commands
                  type: object
                  properties:
                    commands:
                      additionalProperties: false
                      required:
                        - start
                      type: object
                      properties:
                        start:
                          type: string
                          title: The command used to start the cron job.
                        stop:
                          type: string
                          title: The command used to stop the cron job.
                      title: The start and stop commands definition.
                    cmd:
                      type: string
                      title: The command to execute.
                    spec:
                      type: string
                      title: The cron schedule specification.
                    shutdown_timeout:
                      type: integer
                      title: The timeout in seconds after which the cron job will be forcefully killed.
                type: object
                title: Scheduled cron tasks executed by this application.
              resources:
                nullable: true
                title: Resources
                required:
                  - base_memory
                  - memory_ratio
                additionalProperties: false
                type: object
                properties:
                  base_memory:
                    type: integer
                    title: The base memory for the container
                  memory_ratio:
                    type: integer
                    title: The amount of memory to allocate per units of CPU
              size:
                type: string
                title: The container size for this application in production. Leave blank to allow it to be set dynamically.
          type: object
          title: Web applications
        variables:
          items:
            additionalProperties: false
            required:
              - name
              - is_sensitive
            type: object
            properties:
              is_sensitive:
                type: boolean
                title: The variable is sensitive
              name:
                type: string
                title: Name of the variable
              value:
                type: string
                title: Value of the variable
          type: array
          title: The variables applying to this environment
        restrict_robots:
          type: boolean
          title: Whether to restrict robots for this environment.
        cluster_name:
          type: string
          title: The name of the cluster.
        routes:
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/RedirectRoute'
              - $ref: '#/components/schemas/UpstreamRoute'
          type: object
          title: Routes
        enable_smtp:
          type: boolean
          title: Whether to configure SMTP for this environment.
        services:
          additionalProperties:
            additionalProperties: false
            required:
              - type
              - size
              - disk
              - access
              - configuration
              - relationships
              - firewall
            type: object
            properties:
              relationships:
                additionalProperties:
                  type: string
                type: object
                title: The relationships of the service to other services.
              configuration:
                type: object
                title: The configuration of the service.
              firewall:
                nullable: true
                title: Firewall
                required:
                  - outbound
                additionalProperties: false
                type: object
                properties:
                  outbound:
                    items:
                      additionalProperties: false
                      required:
                        - protocol
                        - ips
                        - ports
                      type: object
                      properties:
                        ips:
                          items:
                            type: string
                          type: array
                          title: The IP range in CIDR notation to apply the restriction on.
                        protocol:
                          type: string
                          title: The IP protocol to apply the restriction on.
                        ports:
                          items:
                            type: integer
                          type: array
                          title: The port to apply the restriction on.
                    type: array
                    title: Outbound firewall restrictions
              access:
                type: object
                title: The configuration of the service.
              disk:
                type: integer
                title: The size of the disk.
              type:
                type: string
                title: The service type.
              size:
                type: string
                title: The service size.
          type: object
          title: Services
        deployment_target:
          type: string
          title: The deployment target.
        vpn:
          additionalProperties: false
          required:
            - version
            - aggressive
            - modeconfig
            - authentication
            - gateway_ip
            - identity
            - second_identity
            - remote_identity
            - remote_subnets
            - ike
            - esp
            - ikelifetime
            - lifetime
            - margintime
          type: object
          properties:
            esp:
              type: string
              title: The ESP algorithms to negotiate for this VPN connection.
            remote_identity:
              type: string
              title: The identity of the remote ipsec participant
            margintime:
              type: string
              title: The margin time for re-keying.
            second_identity:
              type: string
              title: The second identity of the ipsec participant
            modeconfig:
              type: string
              title: Defines which mode is used to assign a virtual IP (must be the same on both sides)
            authentication:
              type: string
              title: The authentication scheme
            version:
              type: integer
              title: The IKE version to use (1 or 2)
            gateway_ip:
              type: string
              title: Remote gateway IP
            ike:
              type: string
              title: The IKE algorithms to negotiate for this VPN connection.
            ikelifetime:
              type: string
              title: The lifetime of the IKE exchange.
            lifetime:
              type: string
              title: The lifetime of the ESP exchange.
            aggressive:
              type: string
              title: Whether to use IKEv1 Aggressive or Main Mode
            identity:
              type: string
              title: The identity of the ipsec participant
            remote_subnets:
              items:
                type: string
              type: array
              title: Remote subnets (CIDR notation)
          title: VPN configuration
        http_access:
          additionalProperties: false
          required:
            - is_enabled
            - addresses
            - basic_auth
          type: object
          properties:
            is_enabled:
              type: boolean
              title: Whether http_access control is enabled
            addresses:
              items:
                additionalProperties: false
                required:
                  - permission
                  - address
                type: object
                properties:
                  address:
                    type: string
                    title: IP address or CIDR
                  permission:
                    type: string
                    title: Permission
              type: array
              title: Address grants
            basic_auth:
              additionalProperties:
                type: string
              type: object
              title: Basic auth grants
          title: HTTP access permissions
        subscription:
          additionalProperties: false
          required:
            - license_uri
            - plan
            - environments
            - storage
            - included_users
            - subscription_management_uri
            - restricted
            - suspended
            - user_licenses
          type: object
          properties:
            user_licenses:
              type: integer
              title: Current number of users
            restricted:
              type: boolean
              title: True if subscription attributes, like number of users, are frozen
            included_users:
              type: integer
              title: Number of users
            storage:
              type: integer
              title: Size of storage (in MB)
            environments:
              type: integer
              title: Number of environments
            license_uri:
              type: string
              title: URI of the subscription
            plan:
              type: string
              title: Plan level
            suspended:
              type: boolean
              title: Whether or not the subscription is suspended
            subscription_management_uri:
              type: string
              title: URI for managing the subscription
          title: Subscription
    UserPatch:
      additionalProperties: false
      type: object
    DeploymentTargetPatch:
      oneOf:
        - $ref: '#/components/schemas/DedicatedDeploymentTargetPatch'
        - $ref: '#/components/schemas/EnterpriseDeploymentTargetPatch'
        - $ref: '#/components/schemas/FoundationDeploymentTargetPatch'
    DedicatedDeploymentTarget:
      additionalProperties: false
      required:
        - type
        - name
        - deploy_host
        - deploy_port
        - hosts
        - ssh_users
        - ca
        - certificate
        - private_key
        - services
        - auto_mounts
        - auto_crons
        - maintenance_mode
      type: object
      properties:
        private_key:
          type: string
          title: The PEM-encoded private key used to connect to dedicace using TLS client auth.
        name:
          type: string
          title: The name of the deployment target.
        certificate:
          type: string
          title: The PEM-encoded certificate used to connect to dedicace using TLS client auth.
        maintenance_mode:
          type: boolean
          title: Whether to perform deployments or not
        ca:
          type: string
          title: The PEM-encoded certificate authority used to verify certificate used by dedicace.
        auto_mounts:
          type: boolean
          title: Whether to take application mounts from the pushed data or the deployment target.
        ssh_users:
          items:
            additionalProperties: false
            required:
              - created_at
              - updated_at
              - uuid
              - email
              - display_name
              - ssh_keys
            type: object
            properties:
              display_name:
                type: string
                title: Display name
              ssh_keys:
                type: object
                title: SSH keys
              created_at:
                title: Creation date
                type: string
                format: date-time
              updated_at:
                title: Update date
                type: string
                format: date-time
              email:
                type: string
                title: Email
              uuid:
                type: string
                title: UUID
          type: array
          title: SSH users
        hosts:
          items:
            additionalProperties: false
            required:
              - id
              - type
            type: object
            properties:
              type:
                type: string
                title: The type of the deployment to this host.
              id:
                type: string
                title: The identifier of the host.
          type: array
          title: The hosts of the deployment target.
        deploy_port:
          type: integer
          title: The port to deploy to.
        services:
          type: object
          title: Services names and types defined on the dedicated cluster.
        deploy_host:
          type: string
          title: The host to deploy to.
        type:
          type: string
          title: The type of the deployment target.
        auto_crons:
          type: boolean
          title: Whether to take application crons from the pushed data or the deployment target.
    AcceptedResponse:
      additionalProperties: false
      required:
        - status
        - code
      type: object
      properties:
        status:
          type: string
          title: The status text of the response
        code:
          type: integer
          title: The status code of the response
    ProjectAccessPatch:
      additionalProperties: false
      type: object
      properties:
        role:
          type: string
          title: Role
    CommitCreateInput:
      additionalProperties: false
      required:
        - sha
        - author
        - committer
        - message
        - tree
        - parents
      type: object
      properties:
        committer:
          additionalProperties: false
          required:
            - date
            - name
            - email
          type: object
          properties:
            date:
              title: The time of the author or committer
              type: string
              format: date-time
            name:
              type: string
              title: The name of the author or committer
            email:
              type: string
              title: The email of the author or committer
          title: The information about the author
        author:
          additionalProperties: false
          required:
            - date
            - name
            - email
          type: object
          properties:
            date:
              title: The time of the author or committer
              type: string
              format: date-time
            name:
              type: string
              title: The name of the author or committer
            email:
              type: string
              title: The email of the author or committer
          title: The information about the author
        tree:
          type: string
          title: The identifier of the tree
        sha:
          type: string
          title: The identifier of the commit
        parents:
          items:
            type: string
          type: array
          title: The identifiers of the parents of the commit
        message:
          type: string
          title: The commit message
    CertificateCreateInput:
      additionalProperties: false
      required:
        - certificate
        - key
      type: object
      properties:
        is_invalid:
          type: boolean
          title: Whether this certificate should be skipped during provisioning
        chain:
          items:
            type: string
          type: array
          title: Certificate chain
        key:
          type: string
          title: The PEM-encoded private key
        certificate:
          type: string
          title: The PEM-encoded certificate
    Route:
      oneOf:
        - $ref: '#/components/schemas/RedirectRoute'
        - $ref: '#/components/schemas/UpstreamRoute'
    ProjectSettingsPatch:
      additionalProperties: false
      type: object
      properties:
        initialize:
          type: object
          title: Initialization key
        chorus:
          additionalProperties: false
          type: object
          title: Chorus
    ProjectSettings:
      additionalProperties: false
      required:
        - initialize
        - product_name
        - product_code
        - variables_prefix
        - bot_email
        - application_config_file
        - project_config_dir
        - use_drupal_defaults
        - use_legacy_subdomains
        - development_service_size
        - development_application_size
        - enable_certificate_provisioning
        - certificate_style
        - development_domain_template
        - enable_state_api_deployments
        - temporary_disk_size
        - cron_minimum_interval
        - concurrency_limits
        - flexible_build_cache
        - crons_in_git
        - custom_error_template
        - app_error_page_template
        - environment_name_strategy
        - data_retention
        - enable_codesource_integration_push
        - enforce_mfa
        - systemd
        - chorus
      type: object
      properties:
        use_legacy_subdomains:
          type: boolean
          title: Whether to use legacy subdomain scheme, that replaces `.` by `---` in development subdomains.
        development_service_size:
          type: string
          title: The size of development services.
        project_config_dir:
          type: string
          title: The name of the project configuration directory.
        enable_codesource_integration_push:
          type: boolean
          title: Enable pushing commits to codesource integration.
        enable_certificate_provisioning:
          type: boolean
          title: Enable automatic certificate provisioning.
        app_error_page_template:
          type: string
          title: Custom error template for the application.
        product_code:
          type: string
          title: The lowercase ASCII code of the product.
        certificate_style:
          type: string
          title: Certificate Style
        chorus:
          additionalProperties: false
          required:
            - enabled
            - configuration
          type: object
          properties:
            configuration:
              type: object
              title: Chorus configuration in JSON format.
            enabled:
              type: boolean
              title: Enable chorus service for collecting metrics.
          title: Chorus
        systemd:
          type: boolean
          title: Use systemd images.
        application_config_file:
          type: string
          title: The name of the application-specific configuration file.
        concurrency_limits:
          additionalProperties:
            type: integer
          type: object
          title: The concurrency limits applied to different kind of activities
        use_drupal_defaults:
          type: boolean
          title: Whether to use the default Drupal-centric configuration files when missing from the repository.
        product_name:
          type: string
          title: The name of the product.
        enable_state_api_deployments:
          type: boolean
          title: Enable the State API-driven deployments on regions that support them.
        environment_name_strategy:
          type: string
          title: The strategy used to generate environment machine names
        data_retention:
          additionalProperties: false
          required:
            - production
            - development
          type: object
          properties:
            development:
              additionalProperties: false
              required:
                - max_backups
                - default_config
              type: object
              properties:
                max_backups:
                  type: integer
                  title: The maximum number of backups per environment
                default_config:
                  title: Default Config
                  required:
                    - manual_count
                    - schedule
                  additionalProperties: false
                  type: object
                  properties:
                    manual_count:
                      type: integer
                      title: The number of manual backups to keep.
                    schedule:
                      items:
                        additionalProperties: false
                        required:
                          - interval
                          - count
                        type: object
                        properties:
                          count:
                            type: integer
                            title: The number of backups to keep under this interval.
                          interval:
                            type: string
                            title: The policy interval specification.
                      type: array
                      title: The backup schedule specification.
                  x-stability: EXPERIMENTAL
              title: Development
            production:
              additionalProperties: false
              required:
                - max_backups
                - default_config
              type: object
              properties:
                max_backups:
                  type: integer
                  title: The maximum number of backups per environment
                default_config:
                  title: Default Config
                  required:
                    - manual_count
                    - schedule
                  additionalProperties: false
                  type: object
                  properties:
                    manual_count:
                      type: integer
                      title: The number of manual backups to keep.
                    schedule:
                      items:
                        additionalProperties: false
                        required:
                          - interval
                          - count
                        type: object
                        properties:
                          count:
                            type: integer
                            title: The number of backups to keep under this interval.
                          interval:
                            type: string
                            title: The policy interval specification.
                      type: array
                      title: The backup schedule specification.
                  x-stability: EXPERIMENTAL
              title: Production
          title: Data retention configuration
        temporary_disk_size:
          type: integer
          title: Set the size of the temporary disk (/tmp, in MB).
        initialize:
          type: object
          title: Initialization key
        crons_in_git:
          type: boolean
          title: Enable crons from git.
        bot_email:
          type: string
          title: The email of the bot.
        development_application_size:
          type: string
          title: The size of development applications.
        cron_minimum_interval:
          type: integer
          title: Minimum interval between cron runs (in minutes)
        development_domain_template:
          type: string
          title: The template of the development domain, can include {project} and {environment} placeholders.
        variables_prefix:
          type: string
          title: The prefix of the generated environment variables.
        custom_error_template:
          type: string
          title: Custom error template for the router.
        enforce_mfa:
          type: boolean
          title: Enforce multi-factor authentication.
        flexible_build_cache:
          type: boolean
          title: Enable the flexible build cache implementation
    WebHookIntegrationCreateInput:
      additionalProperties: false
      required:
        - type
        - url
      type: object
      properties:
        url:
          type: string
          title: The URL of the webhook
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        shared_key:
          type: string
          title: The JWS shared secret key
    DeploymentCreateInput:
      additionalProperties: false
      required:
        - cluster_name
        - project_info
        - environment_info
        - deployment_target
        - http_access
        - enable_smtp
        - variables
        - access
        - subscription
        - services
        - routes
        - webapps
        - workers
      type: object
      properties:
        access:
          items:
            additionalProperties: false
            required:
              - entity_id
              - role
            type: object
            properties:
              entity_id:
                type: string
                title: Entity ID
              role:
                type: string
                title: Role
          type: array
          title: Access control definition for this enviroment
        workers:
          additionalProperties:
            additionalProperties: false
            required:
              - name
              - type
              - tree_id
              - slug_id
              - app_dir
              - worker
            type: object
            properties:
              relationships:
                additionalProperties:
                  type: string
                type: object
                title: The relationships of the application to defined services.
              runtime:
                type: object
                title: Runtime-specific configuration.
              name:
                type: string
                title: The name of the application. Must be unique within a project.
              app_dir:
                type: string
                title: The path of the application in the container
              firewall:
                title: Firewall
                nullable: true
                additionalProperties: false
                type: object
                properties:
                  outbound:
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        ips:
                          items:
                            type: string
                          type: array
                          title: The IP range in CIDR notation to apply the restriction on.
                        protocol:
                          type: string
                          title: The IP protocol to apply the restriction on.
                        ports:
                          items:
                            type: integer
                          type: array
                          title: The port to apply the restriction on.
                    type: array
                    title: Outbound firewall restrictions
              slug_id:
                type: string
                title: The identifier of the built artifact of the application
              variables:
                additionalProperties:
                  additionalProperties: {}
                  type: object
                type: object
                title: Variables provide environment-sensitive information to control how your application behaves.  To set a Unix environment variable, specify a key of `env:`, and then each sub-item of that is a key/value pair that will be injected into the environment.
              worker:
                additionalProperties: false
                required:
                  - commands
                type: object
                properties:
                  commands:
                    additionalProperties: false
                    required:
                      - start
                    type: object
                    properties:
                      start:
                        type: string
                        title: The command used to start the application.  It will be restarted if it terminates. Do not use on PHP unless using a custom persistent process like React PHP.
                    title: The commands to manage the worker.
                title: Configuration of a worker container instance.
              access:
                additionalProperties:
                  type: string
                type: object
                title: Access information, a mapping between access type and roles.
              preflight:
                title: Configuration for pre-flight checks.
                required:
                  - enabled
                additionalProperties: false
                type: object
                properties:
                  enabled:
                    type: boolean
                    title: Whether the preflight security blocks are enabled.
                  ignored_rules:
                    items:
                      type: string
                    type: array
                    title: Specific rules to ignore during preflight security checks. See the documentation for options.
              tree_id:
                type: string
                title: The identifier of the source tree of the application
              mounts:
                additionalProperties:
                  additionalProperties: false
                  required:
                    - source
                    - source_path
                  type: object
                  properties:
                    source:
                      type: string
                      title: The type of mount that will provide the data.
                    source_path:
                      type: string
                      title: The path to be mounted, relative to the root directory of the volume that's being mounted from.
                    service:
                      type: string
                      title: The name of the service that the volume will be mounted from. Must be a service in `services.yaml` of type `network-storage`.
                type: object
                title: Filesystem mounts of this application.  If not specified the application will have no writeable disk space.
              timezone:
                type: string
                title: The timezone of the application.  This primarily affects the timezone in which cron tasks will run.  It will not affect the application itself. Defaults to UTC if not specified.
              disk:
                type: integer
                title: The writeable disk size to reserve on this application container.
              type:
                type: string
                title: The base runtime (language) and version to use for this application.
              resources:
                title: Resources
                nullable: true
                additionalProperties: false
                type: object
                properties:
                  base_memory:
                    type: integer
                    title: The base memory for the container
                  memory_ratio:
                    type: integer
                    title: The amount of memory to allocate per units of CPU
              size:
                type: string
                title: The container size for this application in production. Leave blank to allow it to be set dynamically.
          type: object
          title: Workers
        project_info:
          additionalProperties: false
          required:
            - name
          type: object
          properties:
            name:
              type: string
              title: The project machine name
          title: Project Info
        environment_info:
          additionalProperties: false
          required:
            - name
            - is_main
            - is_production
            - reference
          type: object
          properties:
            is_production:
              type: boolean
              title: Is this environment a production environment
            name:
              type: string
              title: The machine name of the environment
            reference:
              type: string
              title: The reference in Git for this environment
            is_main:
              type: boolean
              title: Is this environment the main environment
          title: Environment Info
        webapps:
          additionalProperties:
            additionalProperties: false
            required:
              - name
              - type
              - tree_id
              - slug_id
              - app_dir
            type: object
            properties:
              relationships:
                additionalProperties:
                  type: string
                type: object
                title: The relationships of the application to defined services.
              web:
                additionalProperties: false
                type: object
                properties:
                  passthru:
                    type: string
                    title: The URL to use as a passthru if a file doesn't match the whitelist.
                  commands:
                    additionalProperties: false
                    required:
                      - start
                    type: object
                    properties:
                      start:
                        type: string
                        title: The command used to start the application.  It will be restarted if it terminates. Do not use on PHP unless using a custom persistent process like React PHP.
                    title: Commands to manage the application's lifecycle.
                  index_files:
                    items:
                      type: string
                    type: array
                    title: Files to look for to serve directories.
                  move_to_root:
                    type: boolean
                    title: Whether to move the whole root of the app to the document root.
                  whitelist:
                    items:
                      type: string
                    type: array
                    title: Whitelisted entries.
                  expires:
                    type: string
                    title: Amount of time to cache static assets.
                  locations:
                    additionalProperties:
                      additionalProperties: false
                      type: object
                      properties:
                        passthru:
                          type: string
                          title: Whether to forward disallowed and missing resources from this location to the application. On PHP, set to the PHP front controller script, as a URL fragment. Otherwise set to `true`/`false`.
                        index:
                          items:
                            type: string
                          type: array
                          title: Files to look for to serve directories.
                        rules:
                          additionalProperties:
                            additionalProperties: false
                            type: object
                            properties:
                              passthru:
                                type: string
                                title: Whether to forward disallowed and missing resources from this location to the application. On PHP, set to the PHP front controller script, as a URL fragment. Otherwise set to `true`/`false`.
                              headers:
                                additionalProperties:
                                  type: string
                                type: object
                                title: A set of header fields set to the HTTP response. Replaces headers set on the location block.
                              expires:
                                type: string
                                title: Amount of time to cache static assets.
                              allow:
                                type: boolean
                                title: Whether to allow access to this location by default.
                              scripts:
                                type: boolean
                                title: Whether to execute scripts in this location (for script based runtimes).
                          type: object
                          title: Specific overrides.
                        expires:
                          type: string
                          title: Amount of time to cache static assets.
                        headers:
                          additionalProperties:
                            type: string
                          type: object
                          title: A set of header fields set to the HTTP response. Applies only to static files, not responses from the application.
                        allow:
                          type: boolean
                          title: Whether to allow access to this location by default.
                        scripts:
                          type: boolean
                          title: Whether to execute scripts in this location (for script based runtimes).
                        root:
                          type: string
                          title: The folder from which to serve static assets for this location relative to the application root.
                        request_buffering:
                          additionalProperties: false
                          type: object
                          properties:
                            max_request_size:
                              type: string
                              title: The maximum size request that can be buffered. Supports K, M, and G suffixes.
                            enabled:
                              type: boolean
                              title: Enable request buffering.
                          title: Configuration for supporting request buffering.
                    type: object
                    title: The specification of the web locations served by this application.
                  blacklist:
                    items:
                      type: string
                    type: array
                    title: Blacklisted entries.
                  upstream:
                    additionalProperties: false
                    type: object
                    properties:
                      protocol:
                        type: string
                        title: Protocol
                      socket_family:
                        type: string
                        title: If `tcp`, check the PORT environment variable on application startup. If `unix`, check SOCKET.
                    title: Configuration on how the web server communicates with the application.
                  document_root:
                    type: string
                    title: The document root of this application, relative to its root.
                title: Configuration for accessing this application via HTTP.
              runtime:
                type: object
                title: Runtime-specific configuration.
              name:
                type: string
                title: The name of the application. Must be unique within a project.
              app_dir:
                type: string
                title: The path of the application in the container
              firewall:
                title: Firewall
                nullable: true
                additionalProperties: false
                type: object
                properties:
                  outbound:
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        ips:
                          items:
                            type: string
                          type: array
                          title: The IP range in CIDR notation to apply the restriction on.
                        protocol:
                          type: string
                          title: The IP protocol to apply the restriction on.
                        ports:
                          items:
                            type: integer
                          type: array
                          title: The port to apply the restriction on.
                    type: array
                    title: Outbound firewall restrictions
              slug_id:
                type: string
                title: The identifier of the built artifact of the application
              variables:
                additionalProperties:
                  additionalProperties: {}
                  type: object
                type: object
                title: Variables provide environment-sensitive information to control how your application behaves.  To set a Unix environment variable, specify a key of `env:`, and then each sub-item of that is a key/value pair that will be injected into the environment.
              access:
                additionalProperties:
                  type: string
                type: object
                title: Access information, a mapping between access type and roles.
              preflight:
                title: Configuration for pre-flight checks.
                required:
                  - enabled
                additionalProperties: false
                type: object
                properties:
                  enabled:
                    type: boolean
                    title: Whether the preflight security blocks are enabled.
                  ignored_rules:
                    items:
                      type: string
                    type: array
                    title: Specific rules to ignore during preflight security checks. See the documentation for options.
              tree_id:
                type: string
                title: The identifier of the source tree of the application
              mounts:
                additionalProperties:
                  additionalProperties: false
                  required:
                    - source
                    - source_path
                  type: object
                  properties:
                    source:
                      type: string
                      title: The type of mount that will provide the data.
                    source_path:
                      type: string
                      title: The path to be mounted, relative to the root directory of the volume that's being mounted from.
                    service:
                      type: string
                      title: The name of the service that the volume will be mounted from. Must be a service in `services.yaml` of type `network-storage`.
                type: object
                title: Filesystem mounts of this application.  If not specified the application will have no writeable disk space.
              timezone:
                type: string
                title: The timezone of the application.  This primarily affects the timezone in which cron tasks will run.  It will not affect the application itself. Defaults to UTC if not specified.
              hooks:
                additionalProperties: false
                type: object
                properties:
                  post_deploy:
                    type: string
                    title: Hook executed after an environment is fully deployed.
                  build:
                    type: string
                    title: Hook executed after the build process.
                  deploy:
                    type: string
                    title: Hook executed after the deployment of new code.
                title: Hooks executed at various point in the lifecycle of the application.
              disk:
                type: integer
                title: The writeable disk size to reserve on this application container.
              type:
                type: string
                title: The base runtime (language) and version to use for this application.
              crons:
                additionalProperties:
                  additionalProperties: false
                  required:
                    - spec
                  type: object
                  properties:
                    commands:
                      additionalProperties: false
                      required:
                        - start
                      type: object
                      properties:
                        start:
                          type: string
                          title: The command used to start the cron job.
                        stop:
                          type: string
                          title: The command used to stop the cron job.
                      title: The start and stop commands definition.
                    cmd:
                      type: string
                      title: The command to execute.
                    spec:
                      type: string
                      title: The cron schedule specification.
                    shutdown_timeout:
                      type: integer
                      title: The timeout in seconds after which the cron job will be forcefully killed.
                type: object
                title: Scheduled cron tasks executed by this application.
              resources:
                title: Resources
                nullable: true
                additionalProperties: false
                type: object
                properties:
                  base_memory:
                    type: integer
                    title: The base memory for the container
                  memory_ratio:
                    type: integer
                    title: The amount of memory to allocate per units of CPU
              size:
                type: string
                title: The container size for this application in production. Leave blank to allow it to be set dynamically.
          type: object
          title: Web applications
        variables:
          items:
            additionalProperties: false
            required:
              - name
              - value
            type: object
            properties:
              is_sensitive:
                type: boolean
                title: The variable is sensitive
              name:
                type: string
                title: Name of the variable
              value:
                type: string
                title: Value of the variable
          type: array
          title: The variables applying to this environment
        restrict_robots:
          type: boolean
          title: Whether to restrict robots for this environment.
        cluster_name:
          type: string
          title: The name of the cluster.
        routes:
          additionalProperties:
            oneOf:
              - $ref: '#/components/schemas/RedirectRouteCreateInput'
              - $ref: '#/components/schemas/UpstreamRouteCreateInput'
          type: object
          title: Routes
        enable_smtp:
          type: boolean
          title: Whether to configure SMTP for this environment.
        services:
          additionalProperties:
            additionalProperties: false
            required:
              - type
            type: object
            properties:
              relationships:
                additionalProperties:
                  type: string
                type: object
                title: The relationships of the service to other services.
              configuration:
                type: object
                title: The configuration of the service.
              firewall:
                title: Firewall
                nullable: true
                additionalProperties: false
                type: object
                properties:
                  outbound:
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        ips:
                          items:
                            type: string
                          type: array
                          title: The IP range in CIDR notation to apply the restriction on.
                        protocol:
                          type: string
                          title: The IP protocol to apply the restriction on.
                        ports:
                          items:
                            type: integer
                          type: array
                          title: The port to apply the restriction on.
                    type: array
                    title: Outbound firewall restrictions
              access:
                type: object
                title: The configuration of the service.
              disk:
                type: integer
                title: The size of the disk.
              type:
                type: string
                title: The service type.
              size:
                type: string
                title: The service size.
          type: object
          title: Services
        deployment_target:
          type: string
          title: The deployment target.
        vpn:
          title: VPN configuration
          required:
            - gateway_ip
            - remote_subnets
          additionalProperties: false
          type: object
          properties:
            esp:
              type: string
              title: The ESP algorithms to negotiate for this VPN connection.
            remote_identity:
              type: string
              title: The identity of the remote ipsec participant
            margintime:
              type: string
              title: The margin time for re-keying.
            second_identity:
              type: string
              title: The second identity of the ipsec participant
            modeconfig:
              type: string
              title: Defines which mode is used to assign a virtual IP (must be the same on both sides)
            authentication:
              type: string
              title: The authentication scheme
            version:
              type: integer
              title: The IKE version to use (1 or 2)
            gateway_ip:
              type: string
              title: Remote gateway IP
            ike:
              type: string
              title: The IKE algorithms to negotiate for this VPN connection.
            ikelifetime:
              type: string
              title: The lifetime of the IKE exchange.
            lifetime:
              type: string
              title: The lifetime of the ESP exchange.
            aggressive:
              type: string
              title: Whether to use IKEv1 Aggressive or Main Mode
            identity:
              type: string
              title: The identity of the ipsec participant
            remote_subnets:
              items:
                type: string
              type: array
              title: Remote subnets (CIDR notation)
        http_access:
          additionalProperties: false
          type: object
          properties:
            is_enabled:
              type: boolean
              title: Whether http_access control is enabled
            addresses:
              items:
                additionalProperties: false
                required:
                  - permission
                  - address
                type: object
                properties:
                  address:
                    type: string
                    title: IP address or CIDR
                  permission:
                    type: string
                    title: Permission
              type: array
              title: Address grants
            basic_auth:
              additionalProperties:
                type: string
              type: object
              title: Basic auth grants
          title: HTTP access permissions
        subscription:
          additionalProperties: false
          type: object
          title: Subscription
    DomainCreateInput:
      additionalProperties: false
      required:
        - name
      type: object
      properties:
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
        name:
          type: string
          title: Domain name
        ssl:
          additionalProperties: false
          type: object
          properties:
            chain:
              items:
                type: string
              type: array
              title: Certificate chain
            key:
              type: string
              title: The PEM-encoded private key
            certificate:
              type: string
              title: The PEM-encoded certificate
          title: The SSL information for the domain.
    BitbucketIntegration:
      additionalProperties: false
      required:
        - type
        - repository
        - fetch_branches
        - prune_branches
        - build_pull_requests
        - resync_pull_requests
      type: object
      properties:
        app_credentials:
          additionalProperties: false
          required:
            - key
            - secret
          type: object
          properties:
            secret:
              type: string
              title: The OAuth consumer secret.
            key:
              type: string
              title: The OAuth consumer key.
          title: The OAuth2 consumer information (optional).
        repository:
          type: string
          title: The Bitbucket repository (in the form `user/repo`).
        resync_pull_requests:
          type: boolean
          title: Whether or not pull request environment data should be re-synced on every build.
        build_pull_requests:
          type: boolean
          title: Whether or not to build pull requests.
        prune_branches:
          type: boolean
          title: Whether or not to remove branches that disappeared remotely (requires `fetch_branches`).
        addon_credentials:
          additionalProperties: false
          required:
            - addon_key
            - client_key
            - shared_secret
          type: object
          properties:
            client_key:
              type: string
              title: The client key (public identifier).
            shared_secret:
              type: string
              title: The secret of the client.
            addon_key:
              type: string
              title: The addon key (public identifier).
          title: The addon credential information (optional).
        type:
          type: string
          title: Integration type
        fetch_branches:
          type: boolean
          title: Whether or not to fetch branches.
    EnvironmentVariableCreateInput:
      additionalProperties: false
      required:
        - name
      type: object
      properties:
        is_enabled:
          type: boolean
          title: The variable is enabled on this environment
        name:
          type: string
          title: Name
        is_json:
          type: boolean
          title: The variable is a JSON string
        is_sensitive:
          type: boolean
          title: The variable is sensitive
        value:
          type: string
          title: Value
        is_inheritable:
          type: boolean
          title: The variable is inheritable to child environments
        attributes:
          additionalProperties:
            type: string
          type: object
          title: Arbitrary attributes attached to this resource
    WebHookIntegrationPatch:
      additionalProperties: false
      required:
        - type
        - url
      type: object
      properties:
        url:
          type: string
          title: The URL of the webhook
        excluded_environments:
          items:
            type: string
          type: array
          title: The environments to not execute the hook on
        states:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        environments:
          items:
            type: string
          type: array
          title: The environments to execute the hook on
        type:
          type: string
          title: Integration type
        events:
          items:
            type: string
          type: array
          title: Events to execute the hook on
        shared_key:
          type: string
          title: The JWS shared secret key
  responses:
    '201':
      description: A User profile object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Profile'
  parameters:
    order_id:
      name: orderId
      in: path
      description: The ID of the order
      required: true
      schema:
        type: string
    filter_order_status:
      name: filter[status]
      in: query
      description: The status of the order.
      schema:
        type: string
        enum:
          - completed
          - past_due
          - pending
          - canceled
          - payment_failed_soft_decline
          - payment_failed_hard_decline
    filter_order_owner:
      name: filter[owner]
      in: query
      description: The UUID of the owner. Defaults to current user.
      schema:
        type: string
    filter_order_total:
      name: filter[total]
      in: query
      description: The total of the order.
      schema:
        type: integer
    record_status:
      name: filter[status]
      in: query
      description: 'The status of the plan record. '
      schema:
        type: string
        enum:
          - active
          - suspended
    record_usage_group:
      name: filter[usage_group]
      in: query
      description: Filter records by the type of usage.
      schema:
        type: string
        enum:
          - storage
          - environments
          - user_licenses
    record_start:
      name: filter[start]
      in: query
      description: The start of the observation period for the record. E.g. filter[start]=2018-01-01 will display all records that were active (i.e. did not end) on 2018-01-01
      schema:
        type: string
        format: date
    record_end:
      name: filter[end]
      in: query
      description: The end of the observation period for the record. E.g. filter[end]=2018-01-01 will display all records that were active on (i.e. they started before) 2018-01-01
      schema:
        type: string
        format: date
    region_zone:
      name: filter[zone]
      in: query
      description: Geographical zone of the region.
      schema:
        type: string
    selection_label:
      name: filter[selection_label]
      in: query
      description: The label to display when choosing between regions for new projects.
      schema:
        type: string
    project_label:
      name: filter[project_label]
      in: query
      description: The label to display on existing projects.
      schema:
        type: string
    region_provider:
      name: filter[provider]
      in: query
      description: Cloud hosting provider.
      schema:
        type: string
    region_available:
      name: filter[available]
      in: query
      description: Value 0 displays only disabled regions. Value 1 displays only enabled ones.
      schema:
        type: string
    region_private:
      name: filter[private]
      in: query
      description: Value 0 displays only public regions. Value 1 displays only private ones.
      schema:
        type: string
    endpoint_url:
      name: filter[endpoint_url]
      in: query
      description: Link to the region API endpoint.
      schema:
        type: string
    projectId:
      name: projectId
      in: path
      description: The ID of the project
      required: true
      schema:
        type: string
    subscription_id:
      name: subscriptionId
      in: path
      description: The ID of the subscription
      required: true
      schema:
        type: string
    filter_subscription_id:
      name: filter[subscriptionId]
      in: query
      description: The ID of the subscription
      required: false
      schema:
        type: string
    subscription_status:
      name: filter[status]
      in: query
      description: 'The status of the subscription. '
      schema:
        type: string
        enum:
          - active
          - provisioning
          - provisioning failure
          - suspended
          - deleted
    subscription_owner:
      name: owner
      in: query
      description: The UUID of the owner. Defaults to current user.
      schema:
        type: string
    filter_subscription_owner:
      name: filter[owner]
      in: query
      description: The UUID of the owner.
      schema:
        type: string
    subscription_vendor:
      name: vendor
      in: query
      description: The machine name of the vendor the subscription belongs to.
      schema:
        type: string
    filter_subscription_vendor:
      name: filter[vendor]
      in: query
      description: The machine name of the vendor the subscription belongs to.
      schema:
        type: string
    subscription_title:
      name: project_title
      in: query
      description: The name given to the Platform.sh project. Appears as the title in the Platform.sh UI.
      schema:
        type: string
    options_url:
      name: options_url
      in: query
      description: Optional file with preset project options.
      schema:
        type: string
    options_custom:
      name: options_custom
      in: query
      description: Custom project options, from a trial, magic button, or subscriptions API call.
      schema:
        type: string
    subscription_plan:
      name: plan
      in: query
      description: The Platform.sh plan type of the subscription.
      schema:
        type: string
        enum:
          - development
          - standard
          - medium
          - large
          - xlarge
          - 2xlarge
    filter_subscription_plan:
      name: filter[plan]
      in: query
      description: The Platform.sh plan type of the subscription.
      schema:
        type: string
        enum:
          - development
          - standard
          - medium
          - large
          - xlarge
          - 2xlarge
    subscription_environments:
      name: environments
      in: query
      description: The number of environments which can be provisioned on the Platform.sh project.
      schema:
        type: integer
        default:
    subscription_storage:
      name: storage
      in: query
      description: The total storage available to each Platform.sh environment, in MiB. Only multiples of 1024 are accepted as legal values.
      schema:
        type: integer
        default:
    subscription_region:
      name: project_region
      in: query
      description: The machine name of the region where the Platform.sh project is located. Cannot be changed after project creation.
      required: true
      schema:
        type: string
    filter_payment_owner:
      name: filter[owner]
      in: query
      description: The UUID of the owner.
      schema:
        type: string
    payment_owner:
      name: owner
      in: query
      description: The UUID of the payment source owner. Defaults to current user.
      schema:
        type: string
    page:
      name: page
      in: query
      description: Page to be displayed. Defaults to 1.
      required: false
      schema:
        type: integer
        format: int32
    all:
      name: all
      in: query
      description: Add this parameter with whichever value to display all projects, otherwise, only projects owned by current user will be displayed (admins only).
      required: false
      schema:
        type: string
    user_id:
      name: userId
      in: path
      description: The UUID of the user
      required: true
      schema:
        type: string
    filter_ticket_id:
      name: filter[ticket_id]
      in: query
      description: The ID of the ticket.
      schema:
        type: integer
    filter_url:
      name: filter[url]
      in: query
      description: A link to the Zendesk support ticket.
      schema:
        type: string
    filter_created:
      name: filter[created]
      in: query
      description: ISO dateformat expected. The time when the support ticket was created.
      schema:
        type: string
        format: date-time
    filter_updated:
      name: filter[updated]
      in: query
      description: ISO dateformat expected. The time when the support ticket was updated.
      schema:
        type: string
        format: date-time
    filter_ticket_type:
      name: filter[type]
      in: query
      description: The type of the support ticket.
      schema:
        type: string
        enum:
          - problem
          - task
          - incident
          - question
    filter_ticket_subject:
      name: filter[subject]
      in: query
      description: The subject (or title) of the support ticket.
      required: true
      schema:
        type: string
    filter_description:
      name: filter[description]
      in: query
      description: The description body of the support ticket.
      schema:
        type: string
    filter_ticket_priority:
      name: filter[priority]
      in: query
      description: The priority of the support ticket.
      schema:
        type: string
        enum:
          - low
          - normal
          - high
          - urgent
    filter_ticket_status:
      name: filter[status]
      in: query
      description: The status of the support ticket.
      schema:
        type: string
        enum:
          - closed
          - deleted
          - hold
          - new
          - open
          - pending
          - solved
    filter_recipient:
      name: filter[recipient]
      in: query
      description: Email address of the ticket recipient, defaults to support@platform.sh
      schema:
        type: string
        format: email
    filter_ticket_requester_id:
      name: filter[requester_id]
      in: query
      description: UUID of the ticket requester. Converted from the ZID value.
      schema:
        type: string
        format: uuid
    filter_submitter_id:
      name: filter[submitter_id]
      in: query
      description: UUID of the ticket submitter. Converted from the ZID value.
      schema:
        type: string
        format: uuid
    filter_assignee_id:
      name: filter[assignee_id]
      in: query
      description: UUID of the ticket assignee. Converted from the ZID value.
      schema:
        type: string
        format: uuid
    filter_has_incidents:
      name: filter[has_incidents]
      in: query
      description: Whether or not this ticket has incidents.
      schema:
        type: boolean
    filter_due:
      name: filter[due]
      in: query
      description: ISO dateformat expected. A time that the ticket is due at.
      schema:
        type: string
        format: date-time
    ticket_user:
      name: user
      in: query
      description: The UUID of the user. Defaults to current user.
      schema:
        type: string
    filter_ticket_user:
      name: filter[ticket_user]
      in: query
      description: The UUID of the user. Defaults to current user.
      schema:
        type: string
    filter_ticket_subscription_id:
      name: filter[subscription_id]
      in: query
      description: ID of the subscription
      schema:
        type: string
    filter_ticket_group:
      name: filter[ticket_group]
      in: query
      description: The ticket_group of this ticket.
      schema:
        type: string
    filter_support_plan:
      name: filter[support_plan]
      in: query
      description: The support plan associated with this ticket.
      schema:
        type: string
    filter_affected_url:
      name: filter[affected_url]
      in: query
      description: The affected URL associated with the support ticket.
      schema:
        type: string
        format: url
    filter_queue:
      name: filter[queue]
      in: query
      description: The queue the support ticket is in.
      schema:
        type: string
    filter_issue_type:
      name: filter[issue_type]
      in: query
      description: The issue type of the support ticket.
      schema:
        type: string
    filter_resolution_time:
      name: filter[resolution_time]
      in: query
      description: The resolution_time of the support ticket.
      schema:
        type: string
        format: date-time
    filter_response_time:
      name: filter[response_time]
      in: query
      description: The response time of the support ticket.
      schema:
        type: string
        format: date-time
    filter_project_url:
      name: filter[project_url]
      in: query
      description: The project url of the support ticket.
      schema:
        type: string
        format: url
    filter_region:
      name: filter[region]
      in: query
      description: The project url of the support ticket.
      schema:
        type: string
    filter_category:
      name: filter[category]
      in: query
      description: The category of the support ticket.
      schema:
        type: string
        enum:
          - access
          - billing_question
          - complaint
          - compliance_question
          - configuration_change
          - general_question
          - incident_outage
          - bug_report
          - report_a_gui_bug
    filter_environment:
      name: filter[environment]
      in: query
      description: The environment of the support ticket.
      schema:
        type: string
        enum:
          - env_development
          - env_staging
          - env_production
    ticket_sharing_status:
      name: filter[ticket_sharing_status]
      in: query
      description: The environment of the support ticket.
      schema:
        type: string
        enum:
          - ts_sent_to_platform
          - ts_accepted_by_platform
          - ts_returned_from_platform
          - ts_solved_by_platform
          - ts_rejected_by_platform
    filter_application_ticket_url:
      name: filter[application_ticket_url]
      in: query
      description: OEM vendor like symfony or magento.
      schema:
        type: string
        format: url
    filter_infrastructure_ticket_url:
      name: filter[infrastructure_ticket_url]
      in: query
      description: The infrastructure ticket url of the support ticket.
      schema:
        type: string
        format: url
    jira:
      name: jira
      in: query
      description: A list of JIRA issues related to the support ticket.
      schema:
        type: array
        items:
          properties:
            id:
              description: The id of the query.
              type: integer
            ticket_id:
              description: The id of the ticket.
              type: integer
            issue_id:
              description: The issue id number.
              type: integer
            issue_key:
              description: The issue key.
              type: string
            created_at:
              description: The created at timestamp.
              type: number
              format: float
            updated_at:
              description: The updated at timestamp.
              type: number
              format: float
          type: object
    subscription_support_tier:
      name: support_tier
      in: query
      description: 'The support tier for this subscription. '
      schema:
        type: string
        enum:
          - trial
          - standard
          - premier
          - elite
          - enterprise
          - internal
    filter_subscription_support_tier:
      name: filter[support_tier]
      in: query
      description: 'The support tier for this subscription. '
      schema:
        type: string
        enum:
          - trial
          - standard
          - premier
          - elite
          - enterprise
          - internal
    uuid:
      name: uuid
      in: query
      description: The UUID of the user. Defaults to current user.
      required: false
      schema:
        type: string
        format: uuid
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.platform.sh/oauth2/authorize
          scopes:
            account: Manage own account
            administration: Perform administration tasks for all users
security:
  - OAuth2: []
